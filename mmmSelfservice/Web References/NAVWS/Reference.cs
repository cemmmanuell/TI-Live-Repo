//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace mmmSelfservice.NAVWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Portals_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Portals")]
    public partial class Portals : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnGetApprovalEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUploadedDocuments2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnhrdocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetdocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnsuggestionboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAppraisalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewappraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditappraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngrievancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnExitInterviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetExitInterviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetInductionScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInductOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPaymentMemosListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPaymentmemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnupdatePaymentmemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertTimeSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnModifyTimeSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetTimesheetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertTimesheetLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnModifyTimesheetLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertMileageOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnModifyMileageOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetMileagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertMileageLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnModifyMileageLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFundCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnProjectCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnBudgetLineCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCategoriesCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertTAROperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertTarLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertFIndingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertChallengesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertConclusionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnStandardTextsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertBudgetActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertBudgetActivityLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateBudgetActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateBudgetActivityLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateTAROperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateTARLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAdvertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertApplicationProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnMemberProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnprofileQualificationsInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAdvertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAdvertAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDepartmentValueLeaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAppraisalListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestRequisitionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLeaveApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPayslipOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestRequisitionUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApproveRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLeaveCancelApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestCancelApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRejectApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInserImprestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLeaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetEmployeeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPaymentInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetSummaryPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnloginOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninserreccodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPeriodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnleaveinformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLeaveListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLeaveCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetLeaveTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnHrEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetleaveStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetP9ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLeaveDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateImprestCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestCardEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPettyCashCardEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPettyCashCardDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPettyCashCardDoUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPettyCashCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPettyCashListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPettyCashBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPettyCashApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPaymentTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestLineDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestLineCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestLineCardEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApprovalListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnClaimListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnClaimCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnClaimCardEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnClaimLineDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnClaimLineCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnClaimLineCardEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDepartmentValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRolecenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnImprestListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLeaveCardEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnMissionProportsalsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProfilePictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetStandardTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetContryregionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertMissionProporsalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateMissionProporsalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPurchaseRequisitionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPurchaseRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertimprestnewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnimprestlineinsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertPurchasenewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPurchaselineinsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDimensionValuesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FncancelApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSurrenderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInstImrSrNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertbudgetinfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertteamrolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertmisssionobjectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertmissionactivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnpurchaseLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertGeneralJournalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnJournalLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatebudgetinfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePurchasenewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetLeaveBalanceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertTrainingRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnTrainingListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateTrainingRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnReqTrainingApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUploadedDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSurrenderLineUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnTrainingScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FininserttrainingscheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeletePurchaseLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnimprestlinemodifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertimprestModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPurchaselineModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FninsertBudgetNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUdpateBudgetNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetcurrencyCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteAttachmentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Portals() {
            this.Url = global::mmmSelfservice.Properties.Settings.Default.mmmSelfservice_NAVWS_Portals;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnGetApprovalEntriesCompletedEventHandler FnGetApprovalEntriesCompleted;
        
        /// <remarks/>
        public event FnUploadedDocuments2CompletedEventHandler FnUploadedDocuments2Completed;
        
        /// <remarks/>
        public event FnhrdocumentsCompletedEventHandler FnhrdocumentsCompleted;
        
        /// <remarks/>
        public event FnGetdocumentsCompletedEventHandler FnGetdocumentsCompleted;
        
        /// <remarks/>
        public event FnsuggestionboxCompletedEventHandler FnsuggestionboxCompleted;
        
        /// <remarks/>
        public event FnAppraisalsCompletedEventHandler FnAppraisalsCompleted;
        
        /// <remarks/>
        public event FnNewappraisalCompletedEventHandler FnNewappraisalCompleted;
        
        /// <remarks/>
        public event FnEditappraisalCompletedEventHandler FnEditappraisalCompleted;
        
        /// <remarks/>
        public event FngrievancesCompletedEventHandler FngrievancesCompleted;
        
        /// <remarks/>
        public event FnExitInterviewCompletedEventHandler FnExitInterviewCompleted;
        
        /// <remarks/>
        public event FnGetExitInterviewCompletedEventHandler FnGetExitInterviewCompleted;
        
        /// <remarks/>
        public event FnGetInductionScheduleCompletedEventHandler FnGetInductionScheduleCompleted;
        
        /// <remarks/>
        public event FnInductCompletedEventHandler FnInductCompleted;
        
        /// <remarks/>
        public event FnPaymentMemosListCompletedEventHandler FnPaymentMemosListCompleted;
        
        /// <remarks/>
        public event FnInsertPaymentmemoCompletedEventHandler FnInsertPaymentmemoCompleted;
        
        /// <remarks/>
        public event FnupdatePaymentmemoCompletedEventHandler FnupdatePaymentmemoCompleted;
        
        /// <remarks/>
        public event FnInsertTimeSheetCompletedEventHandler FnInsertTimeSheetCompleted;
        
        /// <remarks/>
        public event FnModifyTimeSheetCompletedEventHandler FnModifyTimeSheetCompleted;
        
        /// <remarks/>
        public event FnGetTimesheetsCompletedEventHandler FnGetTimesheetsCompleted;
        
        /// <remarks/>
        public event FnInsertTimesheetLinesCompletedEventHandler FnInsertTimesheetLinesCompleted;
        
        /// <remarks/>
        public event FnModifyTimesheetLinesCompletedEventHandler FnModifyTimesheetLinesCompleted;
        
        /// <remarks/>
        public event FnInsertMileageCompletedEventHandler FnInsertMileageCompleted;
        
        /// <remarks/>
        public event FnModifyMileageCompletedEventHandler FnModifyMileageCompleted;
        
        /// <remarks/>
        public event FnGetMileagesCompletedEventHandler FnGetMileagesCompleted;
        
        /// <remarks/>
        public event FnInsertMileageLinesCompletedEventHandler FnInsertMileageLinesCompleted;
        
        /// <remarks/>
        public event FnModifyMileageLinesCompletedEventHandler FnModifyMileageLinesCompleted;
        
        /// <remarks/>
        public event FnFundCodeCompletedEventHandler FnFundCodeCompleted;
        
        /// <remarks/>
        public event FnProjectCodeCompletedEventHandler FnProjectCodeCompleted;
        
        /// <remarks/>
        public event FnBudgetLineCodeCompletedEventHandler FnBudgetLineCodeCompleted;
        
        /// <remarks/>
        public event FnCategoriesCodeCompletedEventHandler FnCategoriesCodeCompleted;
        
        /// <remarks/>
        public event FninsertTARCompletedEventHandler FninsertTARCompleted;
        
        /// <remarks/>
        public event FninsertTarLinesCompletedEventHandler FninsertTarLinesCompleted;
        
        /// <remarks/>
        public event FninsertFIndingsCompletedEventHandler FninsertFIndingsCompleted;
        
        /// <remarks/>
        public event FninsertChallengesCompletedEventHandler FninsertChallengesCompleted;
        
        /// <remarks/>
        public event FninsertConclusionsCompletedEventHandler FninsertConclusionsCompleted;
        
        /// <remarks/>
        public event FnStandardTextsCompletedEventHandler FnStandardTextsCompleted;
        
        /// <remarks/>
        public event FninsertBudgetActivityCompletedEventHandler FninsertBudgetActivityCompleted;
        
        /// <remarks/>
        public event FninsertBudgetActivityLinesCompletedEventHandler FninsertBudgetActivityLinesCompleted;
        
        /// <remarks/>
        public event FnUpdateBudgetActivityCompletedEventHandler FnUpdateBudgetActivityCompleted;
        
        /// <remarks/>
        public event FnUpdateBudgetActivityLinesCompletedEventHandler FnUpdateBudgetActivityLinesCompleted;
        
        /// <remarks/>
        public event FnUpdateTARCompletedEventHandler FnUpdateTARCompleted;
        
        /// <remarks/>
        public event FnUpdateTARLinesCompletedEventHandler FnUpdateTARLinesCompleted;
        
        /// <remarks/>
        public event FnAdvertsCompletedEventHandler FnAdvertsCompleted;
        
        /// <remarks/>
        public event FninsertApplicationProfileCompletedEventHandler FninsertApplicationProfileCompleted;
        
        /// <remarks/>
        public event FnMemberProfileCompletedEventHandler FnMemberProfileCompleted;
        
        /// <remarks/>
        public event FnprofileQualificationsInsertCompletedEventHandler FnprofileQualificationsInsertCompleted;
        
        /// <remarks/>
        public event FnLookupCompletedEventHandler FnLookupCompleted;
        
        /// <remarks/>
        public event FnGetQualificationsCompletedEventHandler FnGetQualificationsCompleted;
        
        /// <remarks/>
        public event FnApplyCompletedEventHandler FnApplyCompleted;
        
        /// <remarks/>
        public event FnAdvertCompletedEventHandler FnAdvertCompleted;
        
        /// <remarks/>
        public event FnAdvertAppliedCompletedEventHandler FnAdvertAppliedCompleted;
        
        /// <remarks/>
        public event FnDepartmentValueLeaveCompletedEventHandler FnDepartmentValueLeaveCompleted;
        
        /// <remarks/>
        public event FnInsertAppraisalCompletedEventHandler FnInsertAppraisalCompleted;
        
        /// <remarks/>
        public event FnUpdateAppraisalCompletedEventHandler FnUpdateAppraisalCompleted;
        
        /// <remarks/>
        public event FnAppraisalListCompletedEventHandler FnAppraisalListCompleted;
        
        /// <remarks/>
        public event FnImprestRequisitionCreateCompletedEventHandler FnImprestRequisitionCreateCompleted;
        
        /// <remarks/>
        public event FnLeaveApplicationCompletedEventHandler FnLeaveApplicationCompleted;
        
        /// <remarks/>
        public event FnLeaveApprovalRequestCompletedEventHandler FnLeaveApprovalRequestCompleted;
        
        /// <remarks/>
        public event FnImprestApprovalRequestCompletedEventHandler FnImprestApprovalRequestCompleted;
        
        /// <remarks/>
        public event FnGetPayslipCompletedEventHandler FnGetPayslipCompleted;
        
        /// <remarks/>
        public event FnImprestRequisitionUpdateCompletedEventHandler FnImprestRequisitionUpdateCompleted;
        
        /// <remarks/>
        public event FnApproveRecordsCompletedEventHandler FnApproveRecordsCompleted;
        
        /// <remarks/>
        public event FnLeaveCancelApprovalRequestCompletedEventHandler FnLeaveCancelApprovalRequestCompleted;
        
        /// <remarks/>
        public event FnImprestCancelApprovalRequestCompletedEventHandler FnImprestCancelApprovalRequestCompleted;
        
        /// <remarks/>
        public event FnRejectApprovalRequestCompletedEventHandler FnRejectApprovalRequestCompleted;
        
        /// <remarks/>
        public event FnImprestSurrenderApprovalCompletedEventHandler FnImprestSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event FnInserImprestCompletedEventHandler FnInserImprestCompleted;
        
        /// <remarks/>
        public event UpdateLeaveCompletedEventHandler UpdateLeaveCompleted;
        
        /// <remarks/>
        public event FnGetEmployeeDetailsCompletedEventHandler FnGetEmployeeDetailsCompleted;
        
        /// <remarks/>
        public event FnGetPaymentInformationCompletedEventHandler FnGetPaymentInformationCompleted;
        
        /// <remarks/>
        public event FnGetSummaryPaymentCompletedEventHandler FnGetSummaryPaymentCompleted;
        
        /// <remarks/>
        public event FnloginCompletedEventHandler FnloginCompleted;
        
        /// <remarks/>
        public event FnRegisterCompletedEventHandler FnRegisterCompleted;
        
        /// <remarks/>
        public event FninserreccodeCompletedEventHandler FninserreccodeCompleted;
        
        /// <remarks/>
        public event FnGetPeriodsCompletedEventHandler FnGetPeriodsCompleted;
        
        /// <remarks/>
        public event FnleaveinformationCompletedEventHandler FnleaveinformationCompleted;
        
        /// <remarks/>
        public event FnLeaveListCompletedEventHandler FnLeaveListCompleted;
        
        /// <remarks/>
        public event FnLeaveCardCompletedEventHandler FnLeaveCardCompleted;
        
        /// <remarks/>
        public event FnGetLeaveTypesCompletedEventHandler FnGetLeaveTypesCompleted;
        
        /// <remarks/>
        public event FnHrEmployeesCompletedEventHandler FnHrEmployeesCompleted;
        
        /// <remarks/>
        public event FnEditApplicationCompletedEventHandler FnEditApplicationCompleted;
        
        /// <remarks/>
        public event FnDeleteCompletedEventHandler FnDeleteCompleted;
        
        /// <remarks/>
        public event FnGetleaveStatementCompletedEventHandler FnGetleaveStatementCompleted;
        
        /// <remarks/>
        public event FnGetP9ReportCompletedEventHandler FnGetP9ReportCompleted;
        
        /// <remarks/>
        public event FnLeaveDeleteCompletedEventHandler FnLeaveDeleteCompleted;
        
        /// <remarks/>
        public event FnUpdateImprestCardCompletedEventHandler FnUpdateImprestCardCompleted;
        
        /// <remarks/>
        public event FnImprestCardCompletedEventHandler FnImprestCardCompleted;
        
        /// <remarks/>
        public event FnImprestCardEditCompletedEventHandler FnImprestCardEditCompleted;
        
        /// <remarks/>
        public event FnPettyCashCardEditCompletedEventHandler FnPettyCashCardEditCompleted;
        
        /// <remarks/>
        public event FnPettyCashCardDeleteCompletedEventHandler FnPettyCashCardDeleteCompleted;
        
        /// <remarks/>
        public event FnPettyCashCardDoUpdateCompletedEventHandler FnPettyCashCardDoUpdateCompleted;
        
        /// <remarks/>
        public event FnPettyCashCardCompletedEventHandler FnPettyCashCardCompleted;
        
        /// <remarks/>
        public event FnPettyCashListCompletedEventHandler FnPettyCashListCompleted;
        
        /// <remarks/>
        public event FnPettyCashBankCompletedEventHandler FnPettyCashBankCompleted;
        
        /// <remarks/>
        public event FnPettyCashApprovalCompletedEventHandler FnPettyCashApprovalCompleted;
        
        /// <remarks/>
        public event FnPaymentTypesCompletedEventHandler FnPaymentTypesCompleted;
        
        /// <remarks/>
        public event FnImprestLineDeleteCompletedEventHandler FnImprestLineDeleteCompleted;
        
        /// <remarks/>
        public event FnImprestLineCompletedEventHandler FnImprestLineCompleted;
        
        /// <remarks/>
        public event FnImprestLineCardCompletedEventHandler FnImprestLineCardCompleted;
        
        /// <remarks/>
        public event FnImprestLineCardEditCompletedEventHandler FnImprestLineCardEditCompleted;
        
        /// <remarks/>
        public event ApprovalListCompletedEventHandler ApprovalListCompleted;
        
        /// <remarks/>
        public event FnClaimListCompletedEventHandler FnClaimListCompleted;
        
        /// <remarks/>
        public event FnClaimCardCompletedEventHandler FnClaimCardCompleted;
        
        /// <remarks/>
        public event FnClaimCardEditCompletedEventHandler FnClaimCardEditCompleted;
        
        /// <remarks/>
        public event FnClaimLineDeleteCompletedEventHandler FnClaimLineDeleteCompleted;
        
        /// <remarks/>
        public event FnClaimLineCompletedEventHandler FnClaimLineCompleted;
        
        /// <remarks/>
        public event FnClaimLineCardCompletedEventHandler FnClaimLineCardCompleted;
        
        /// <remarks/>
        public event FnClaimLineCardEditCompletedEventHandler FnClaimLineCardEditCompleted;
        
        /// <remarks/>
        public event FnDepartmentCompletedEventHandler FnDepartmentCompleted;
        
        /// <remarks/>
        public event FnDepartmentValueCompletedEventHandler FnDepartmentValueCompleted;
        
        /// <remarks/>
        public event FnRolecenterCompletedEventHandler FnRolecenterCompleted;
        
        /// <remarks/>
        public event FnImprestListCompletedEventHandler FnImprestListCompleted;
        
        /// <remarks/>
        public event FnLeaveCardEditCompletedEventHandler FnLeaveCardEditCompleted;
        
        /// <remarks/>
        public event FnMissionProportsalsListCompletedEventHandler FnMissionProportsalsListCompleted;
        
        /// <remarks/>
        public event FnGetProfilePictureCompletedEventHandler FnGetProfilePictureCompleted;
        
        /// <remarks/>
        public event FnGetStandardTextCompletedEventHandler FnGetStandardTextCompleted;
        
        /// <remarks/>
        public event FnGetContryregionsCompletedEventHandler FnGetContryregionsCompleted;
        
        /// <remarks/>
        public event FnInsertMissionProporsalCompletedEventHandler FnInsertMissionProporsalCompleted;
        
        /// <remarks/>
        public event FnUpdateMissionProporsalCompletedEventHandler FnUpdateMissionProporsalCompleted;
        
        /// <remarks/>
        public event FnPurchaseRequisitionListCompletedEventHandler FnPurchaseRequisitionListCompleted;
        
        /// <remarks/>
        public event FnInsertPurchaseRequestCompletedEventHandler FnInsertPurchaseRequestCompleted;
        
        /// <remarks/>
        public event FninsertimprestnewCompletedEventHandler FninsertimprestnewCompleted;
        
        /// <remarks/>
        public event FnimprestlineinsertCompletedEventHandler FnimprestlineinsertCompleted;
        
        /// <remarks/>
        public event FninsertPurchasenewCompletedEventHandler FninsertPurchasenewCompleted;
        
        /// <remarks/>
        public event FnPurchaselineinsertCompletedEventHandler FnPurchaselineinsertCompleted;
        
        /// <remarks/>
        public event FnDimensionValuesListCompletedEventHandler FnDimensionValuesListCompleted;
        
        /// <remarks/>
        public event FnApprovalCompletedEventHandler FnApprovalCompleted;
        
        /// <remarks/>
        public event FncancelApprovalCompletedEventHandler FncancelApprovalCompleted;
        
        /// <remarks/>
        public event FnSurrenderListCompletedEventHandler FnSurrenderListCompleted;
        
        /// <remarks/>
        public event FnInstImrSrNewCompletedEventHandler FnInstImrSrNewCompleted;
        
        /// <remarks/>
        public event FninsertbudgetinfoCompletedEventHandler FninsertbudgetinfoCompleted;
        
        /// <remarks/>
        public event FninsertteamrolesCompletedEventHandler FninsertteamrolesCompleted;
        
        /// <remarks/>
        public event FninsertmisssionobjectivesCompletedEventHandler FninsertmisssionobjectivesCompleted;
        
        /// <remarks/>
        public event FninsertmissionactivitiesCompletedEventHandler FninsertmissionactivitiesCompleted;
        
        /// <remarks/>
        public event FnpurchaseLinesCompletedEventHandler FnpurchaseLinesCompleted;
        
        /// <remarks/>
        public event FnInsertGeneralJournalCompletedEventHandler FnInsertGeneralJournalCompleted;
        
        /// <remarks/>
        public event FnJournalLinesCompletedEventHandler FnJournalLinesCompleted;
        
        /// <remarks/>
        public event FnUpdatebudgetinfoCompletedEventHandler FnUpdatebudgetinfoCompleted;
        
        /// <remarks/>
        public event FnUpdatePurchasenewCompletedEventHandler FnUpdatePurchasenewCompleted;
        
        /// <remarks/>
        public event FngetLeaveBalanceTypeCompletedEventHandler FngetLeaveBalanceTypeCompleted;
        
        /// <remarks/>
        public event FnInsertTrainingRequestCompletedEventHandler FnInsertTrainingRequestCompleted;
        
        /// <remarks/>
        public event FnTrainingListCompletedEventHandler FnTrainingListCompleted;
        
        /// <remarks/>
        public event FnUpdateTrainingRequestCompletedEventHandler FnUpdateTrainingRequestCompleted;
        
        /// <remarks/>
        public event FnReqTrainingApprovalCompletedEventHandler FnReqTrainingApprovalCompleted;
        
        /// <remarks/>
        public event FnInsertAttachmentsCompletedEventHandler FnInsertAttachmentsCompleted;
        
        /// <remarks/>
        public event FnUploadedDocumentsCompletedEventHandler FnUploadedDocumentsCompleted;
        
        /// <remarks/>
        public event FnSurrenderLineUpdateCompletedEventHandler FnSurrenderLineUpdateCompleted;
        
        /// <remarks/>
        public event FnTrainingScheduleCompletedEventHandler FnTrainingScheduleCompleted;
        
        /// <remarks/>
        public event FininserttrainingscheduleCompletedEventHandler FininserttrainingscheduleCompleted;
        
        /// <remarks/>
        public event FnDeletePurchaseLineCompletedEventHandler FnDeletePurchaseLineCompleted;
        
        /// <remarks/>
        public event FnimprestlinemodifyCompletedEventHandler FnimprestlinemodifyCompleted;
        
        /// <remarks/>
        public event FninsertimprestModifyCompletedEventHandler FninsertimprestModifyCompleted;
        
        /// <remarks/>
        public event FnPurchaselineModifyCompletedEventHandler FnPurchaselineModifyCompleted;
        
        /// <remarks/>
        public event FninsertBudgetNotesCompletedEventHandler FninsertBudgetNotesCompleted;
        
        /// <remarks/>
        public event FnUdpateBudgetNotesCompletedEventHandler FnUdpateBudgetNotesCompleted;
        
        /// <remarks/>
        public event FnGetcurrencyCodesCompletedEventHandler FnGetcurrencyCodesCompleted;
        
        /// <remarks/>
        public event FnGetAttachmentCompletedEventHandler FnGetAttachmentCompleted;
        
        /// <remarks/>
        public event FnDeleteAttachmentCompletedEventHandler FnDeleteAttachmentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetApprovalEntries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetApprovalEntries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetApprovalEntries(string documentNo) {
            object[] results = this.Invoke("FnGetApprovalEntries", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetApprovalEntriesAsync(string documentNo) {
            this.FnGetApprovalEntriesAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void FnGetApprovalEntriesAsync(string documentNo, object userState) {
            if ((this.FnGetApprovalEntriesOperationCompleted == null)) {
                this.FnGetApprovalEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetApprovalEntriesOperationCompleted);
            }
            this.InvokeAsync("FnGetApprovalEntries", new object[] {
                        documentNo}, this.FnGetApprovalEntriesOperationCompleted, userState);
        }
        
        private void OnFnGetApprovalEntriesOperationCompleted(object arg) {
            if ((this.FnGetApprovalEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetApprovalEntriesCompleted(this, new FnGetApprovalEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUploadedDocuments2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUploadedDocuments2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUploadedDocuments2(string documentNo) {
            object[] results = this.Invoke("FnUploadedDocuments2", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUploadedDocuments2Async(string documentNo) {
            this.FnUploadedDocuments2Async(documentNo, null);
        }
        
        /// <remarks/>
        public void FnUploadedDocuments2Async(string documentNo, object userState) {
            if ((this.FnUploadedDocuments2OperationCompleted == null)) {
                this.FnUploadedDocuments2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUploadedDocuments2OperationCompleted);
            }
            this.InvokeAsync("FnUploadedDocuments2", new object[] {
                        documentNo}, this.FnUploadedDocuments2OperationCompleted, userState);
        }
        
        private void OnFnUploadedDocuments2OperationCompleted(object arg) {
            if ((this.FnUploadedDocuments2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUploadedDocuments2Completed(this, new FnUploadedDocuments2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fnhrdocuments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fnhrdocuments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fnhrdocuments() {
            object[] results = this.Invoke("Fnhrdocuments", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnhrdocumentsAsync() {
            this.FnhrdocumentsAsync(null);
        }
        
        /// <remarks/>
        public void FnhrdocumentsAsync(object userState) {
            if ((this.FnhrdocumentsOperationCompleted == null)) {
                this.FnhrdocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnhrdocumentsOperationCompleted);
            }
            this.InvokeAsync("Fnhrdocuments", new object[0], this.FnhrdocumentsOperationCompleted, userState);
        }
        
        private void OnFnhrdocumentsOperationCompleted(object arg) {
            if ((this.FnhrdocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnhrdocumentsCompleted(this, new FnhrdocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetdocuments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetdocuments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetdocuments(int attachmentno, ref string pictureText) {
            object[] results = this.Invoke("FnGetdocuments", new object[] {
                        attachmentno,
                        pictureText});
            pictureText = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetdocumentsAsync(int attachmentno, string pictureText) {
            this.FnGetdocumentsAsync(attachmentno, pictureText, null);
        }
        
        /// <remarks/>
        public void FnGetdocumentsAsync(int attachmentno, string pictureText, object userState) {
            if ((this.FnGetdocumentsOperationCompleted == null)) {
                this.FnGetdocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetdocumentsOperationCompleted);
            }
            this.InvokeAsync("FnGetdocuments", new object[] {
                        attachmentno,
                        pictureText}, this.FnGetdocumentsOperationCompleted, userState);
        }
        
        private void OnFnGetdocumentsOperationCompleted(object arg) {
            if ((this.FnGetdocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetdocumentsCompleted(this, new FnGetdocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fnsuggestionbox", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fnsuggestionbox_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fnsuggestionbox(string suggestion, bool anonymous, string empno) {
            this.Invoke("Fnsuggestionbox", new object[] {
                        suggestion,
                        anonymous,
                        empno});
        }
        
        /// <remarks/>
        public void FnsuggestionboxAsync(string suggestion, bool anonymous, string empno) {
            this.FnsuggestionboxAsync(suggestion, anonymous, empno, null);
        }
        
        /// <remarks/>
        public void FnsuggestionboxAsync(string suggestion, bool anonymous, string empno, object userState) {
            if ((this.FnsuggestionboxOperationCompleted == null)) {
                this.FnsuggestionboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnsuggestionboxOperationCompleted);
            }
            this.InvokeAsync("Fnsuggestionbox", new object[] {
                        suggestion,
                        anonymous,
                        empno}, this.FnsuggestionboxOperationCompleted, userState);
        }
        
        private void OnFnsuggestionboxOperationCompleted(object arg) {
            if ((this.FnsuggestionboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnsuggestionboxCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAppraisals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAppraisals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAppraisals(string empno) {
            object[] results = this.Invoke("FnAppraisals", new object[] {
                        empno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAppraisalsAsync(string empno) {
            this.FnAppraisalsAsync(empno, null);
        }
        
        /// <remarks/>
        public void FnAppraisalsAsync(string empno, object userState) {
            if ((this.FnAppraisalsOperationCompleted == null)) {
                this.FnAppraisalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAppraisalsOperationCompleted);
            }
            this.InvokeAsync("FnAppraisals", new object[] {
                        empno}, this.FnAppraisalsOperationCompleted, userState);
        }
        
        private void OnFnAppraisalsOperationCompleted(object arg) {
            if ((this.FnAppraisalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAppraisalsCompleted(this, new FnAppraisalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnNewappraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnNewappraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewappraisal(string empno, string background) {
            object[] results = this.Invoke("FnNewappraisal", new object[] {
                        empno,
                        background});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewappraisalAsync(string empno, string background) {
            this.FnNewappraisalAsync(empno, background, null);
        }
        
        /// <remarks/>
        public void FnNewappraisalAsync(string empno, string background, object userState) {
            if ((this.FnNewappraisalOperationCompleted == null)) {
                this.FnNewappraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewappraisalOperationCompleted);
            }
            this.InvokeAsync("FnNewappraisal", new object[] {
                        empno,
                        background}, this.FnNewappraisalOperationCompleted, userState);
        }
        
        private void OnFnNewappraisalOperationCompleted(object arg) {
            if ((this.FnNewappraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewappraisalCompleted(this, new FnNewappraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnEditappraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnEditappraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnEditappraisal(string appraisalno, string background) {
            this.Invoke("FnEditappraisal", new object[] {
                        appraisalno,
                        background});
        }
        
        /// <remarks/>
        public void FnEditappraisalAsync(string appraisalno, string background) {
            this.FnEditappraisalAsync(appraisalno, background, null);
        }
        
        /// <remarks/>
        public void FnEditappraisalAsync(string appraisalno, string background, object userState) {
            if ((this.FnEditappraisalOperationCompleted == null)) {
                this.FnEditappraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditappraisalOperationCompleted);
            }
            this.InvokeAsync("FnEditappraisal", new object[] {
                        appraisalno,
                        background}, this.FnEditappraisalOperationCompleted, userState);
        }
        
        private void OnFnEditappraisalOperationCompleted(object arg) {
            if ((this.FnEditappraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditappraisalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fngrievances", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fngrievances_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fngrievances(string suggestion, bool anonymous, string empno) {
            this.Invoke("Fngrievances", new object[] {
                        suggestion,
                        anonymous,
                        empno});
        }
        
        /// <remarks/>
        public void FngrievancesAsync(string suggestion, bool anonymous, string empno) {
            this.FngrievancesAsync(suggestion, anonymous, empno, null);
        }
        
        /// <remarks/>
        public void FngrievancesAsync(string suggestion, bool anonymous, string empno, object userState) {
            if ((this.FngrievancesOperationCompleted == null)) {
                this.FngrievancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngrievancesOperationCompleted);
            }
            this.InvokeAsync("Fngrievances", new object[] {
                        suggestion,
                        anonymous,
                        empno}, this.FngrievancesOperationCompleted, userState);
        }
        
        private void OnFngrievancesOperationCompleted(object arg) {
            if ((this.FngrievancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngrievancesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnExitInterview", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnExitInterview_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnExitInterview(
                    string empNo, 
                    string designation, 
                    string main_reasona40sa41_for_your_exit, 
                    string overall_impression, 
                    string clear_objectives, 
                    string your_performance_reviewed, 
                    string received_enough_recognition, 
                    string career_aspirations, 
                    string relationship_with_your, 
                    string with_your_immediate_team, 
                    string perception_on_TIa45Kenyaa194s, 
                    string most_fulfilling, 
                    string greatest_accomplishments, 
                    string most_frustrating, 
                    string better_place, 
                    string tIa45Kenya_in_the_future, 
                    string constructive_feedback, 
                    string next_step, 
                    string intervire_Conducted_By) {
            this.Invoke("FnExitInterview", new object[] {
                        empNo,
                        designation,
                        main_reasona40sa41_for_your_exit,
                        overall_impression,
                        clear_objectives,
                        your_performance_reviewed,
                        received_enough_recognition,
                        career_aspirations,
                        relationship_with_your,
                        with_your_immediate_team,
                        perception_on_TIa45Kenyaa194s,
                        most_fulfilling,
                        greatest_accomplishments,
                        most_frustrating,
                        better_place,
                        tIa45Kenya_in_the_future,
                        constructive_feedback,
                        next_step,
                        intervire_Conducted_By});
        }
        
        /// <remarks/>
        public void FnExitInterviewAsync(
                    string empNo, 
                    string designation, 
                    string main_reasona40sa41_for_your_exit, 
                    string overall_impression, 
                    string clear_objectives, 
                    string your_performance_reviewed, 
                    string received_enough_recognition, 
                    string career_aspirations, 
                    string relationship_with_your, 
                    string with_your_immediate_team, 
                    string perception_on_TIa45Kenyaa194s, 
                    string most_fulfilling, 
                    string greatest_accomplishments, 
                    string most_frustrating, 
                    string better_place, 
                    string tIa45Kenya_in_the_future, 
                    string constructive_feedback, 
                    string next_step, 
                    string intervire_Conducted_By) {
            this.FnExitInterviewAsync(empNo, designation, main_reasona40sa41_for_your_exit, overall_impression, clear_objectives, your_performance_reviewed, received_enough_recognition, career_aspirations, relationship_with_your, with_your_immediate_team, perception_on_TIa45Kenyaa194s, most_fulfilling, greatest_accomplishments, most_frustrating, better_place, tIa45Kenya_in_the_future, constructive_feedback, next_step, intervire_Conducted_By, null);
        }
        
        /// <remarks/>
        public void FnExitInterviewAsync(
                    string empNo, 
                    string designation, 
                    string main_reasona40sa41_for_your_exit, 
                    string overall_impression, 
                    string clear_objectives, 
                    string your_performance_reviewed, 
                    string received_enough_recognition, 
                    string career_aspirations, 
                    string relationship_with_your, 
                    string with_your_immediate_team, 
                    string perception_on_TIa45Kenyaa194s, 
                    string most_fulfilling, 
                    string greatest_accomplishments, 
                    string most_frustrating, 
                    string better_place, 
                    string tIa45Kenya_in_the_future, 
                    string constructive_feedback, 
                    string next_step, 
                    string intervire_Conducted_By, 
                    object userState) {
            if ((this.FnExitInterviewOperationCompleted == null)) {
                this.FnExitInterviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnExitInterviewOperationCompleted);
            }
            this.InvokeAsync("FnExitInterview", new object[] {
                        empNo,
                        designation,
                        main_reasona40sa41_for_your_exit,
                        overall_impression,
                        clear_objectives,
                        your_performance_reviewed,
                        received_enough_recognition,
                        career_aspirations,
                        relationship_with_your,
                        with_your_immediate_team,
                        perception_on_TIa45Kenyaa194s,
                        most_fulfilling,
                        greatest_accomplishments,
                        most_frustrating,
                        better_place,
                        tIa45Kenya_in_the_future,
                        constructive_feedback,
                        next_step,
                        intervire_Conducted_By}, this.FnExitInterviewOperationCompleted, userState);
        }
        
        private void OnFnExitInterviewOperationCompleted(object arg) {
            if ((this.FnExitInterviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnExitInterviewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetExitInterview", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetExitInterview_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetExitInterview(string empNo) {
            object[] results = this.Invoke("FnGetExitInterview", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetExitInterviewAsync(string empNo) {
            this.FnGetExitInterviewAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnGetExitInterviewAsync(string empNo, object userState) {
            if ((this.FnGetExitInterviewOperationCompleted == null)) {
                this.FnGetExitInterviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetExitInterviewOperationCompleted);
            }
            this.InvokeAsync("FnGetExitInterview", new object[] {
                        empNo}, this.FnGetExitInterviewOperationCompleted, userState);
        }
        
        private void OnFnGetExitInterviewOperationCompleted(object arg) {
            if ((this.FnGetExitInterviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetExitInterviewCompleted(this, new FnGetExitInterviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetInductionSchedule", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetInductionSchedule_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetInductionSchedule(string employee) {
            object[] results = this.Invoke("FnGetInductionSchedule", new object[] {
                        employee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetInductionScheduleAsync(string employee) {
            this.FnGetInductionScheduleAsync(employee, null);
        }
        
        /// <remarks/>
        public void FnGetInductionScheduleAsync(string employee, object userState) {
            if ((this.FnGetInductionScheduleOperationCompleted == null)) {
                this.FnGetInductionScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetInductionScheduleOperationCompleted);
            }
            this.InvokeAsync("FnGetInductionSchedule", new object[] {
                        employee}, this.FnGetInductionScheduleOperationCompleted, userState);
        }
        
        private void OnFnGetInductionScheduleOperationCompleted(object arg) {
            if ((this.FnGetInductionScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetInductionScheduleCompleted(this, new FnGetInductionScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInduct", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInduct_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInduct(string inductingEmployee, string emloyee, bool induct, string comments) {
            this.Invoke("FnInduct", new object[] {
                        inductingEmployee,
                        emloyee,
                        induct,
                        comments});
        }
        
        /// <remarks/>
        public void FnInductAsync(string inductingEmployee, string emloyee, bool induct, string comments) {
            this.FnInductAsync(inductingEmployee, emloyee, induct, comments, null);
        }
        
        /// <remarks/>
        public void FnInductAsync(string inductingEmployee, string emloyee, bool induct, string comments, object userState) {
            if ((this.FnInductOperationCompleted == null)) {
                this.FnInductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInductOperationCompleted);
            }
            this.InvokeAsync("FnInduct", new object[] {
                        inductingEmployee,
                        emloyee,
                        induct,
                        comments}, this.FnInductOperationCompleted, userState);
        }
        
        private void OnFnInductOperationCompleted(object arg) {
            if ((this.FnInductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPaymentMemosList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPaymentMemosList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPaymentMemosList(string empNo) {
            object[] results = this.Invoke("FnPaymentMemosList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPaymentMemosListAsync(string empNo) {
            this.FnPaymentMemosListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnPaymentMemosListAsync(string empNo, object userState) {
            if ((this.FnPaymentMemosListOperationCompleted == null)) {
                this.FnPaymentMemosListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPaymentMemosListOperationCompleted);
            }
            this.InvokeAsync("FnPaymentMemosList", new object[] {
                        empNo}, this.FnPaymentMemosListOperationCompleted, userState);
        }
        
        private void OnFnPaymentMemosListOperationCompleted(object arg) {
            if ((this.FnPaymentMemosListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPaymentMemosListCompleted(this, new FnPaymentMemosListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertPaymentmemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertPaymentmemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPaymentmemo([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datesofActivities, string fundcode, string programcode, string departmentdimension, string budgetdimesion, string budgetdescription, string background, string empno, string @ref, string purchaseRequest, string missionproposal) {
            object[] results = this.Invoke("FnInsertPaymentmemo", new object[] {
                        datesofActivities,
                        fundcode,
                        programcode,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        background,
                        empno,
                        @ref,
                        purchaseRequest,
                        missionproposal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPaymentmemoAsync(System.DateTime datesofActivities, string fundcode, string programcode, string departmentdimension, string budgetdimesion, string budgetdescription, string background, string empno, string @ref, string purchaseRequest, string missionproposal) {
            this.FnInsertPaymentmemoAsync(datesofActivities, fundcode, programcode, departmentdimension, budgetdimesion, budgetdescription, background, empno, @ref, purchaseRequest, missionproposal, null);
        }
        
        /// <remarks/>
        public void FnInsertPaymentmemoAsync(System.DateTime datesofActivities, string fundcode, string programcode, string departmentdimension, string budgetdimesion, string budgetdescription, string background, string empno, string @ref, string purchaseRequest, string missionproposal, object userState) {
            if ((this.FnInsertPaymentmemoOperationCompleted == null)) {
                this.FnInsertPaymentmemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPaymentmemoOperationCompleted);
            }
            this.InvokeAsync("FnInsertPaymentmemo", new object[] {
                        datesofActivities,
                        fundcode,
                        programcode,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        background,
                        empno,
                        @ref,
                        purchaseRequest,
                        missionproposal}, this.FnInsertPaymentmemoOperationCompleted, userState);
        }
        
        private void OnFnInsertPaymentmemoOperationCompleted(object arg) {
            if ((this.FnInsertPaymentmemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPaymentmemoCompleted(this, new FnInsertPaymentmemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnupdatePaymentmemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnupdatePaymentmemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnupdatePaymentmemo([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datesofActivities, string fundcode, string programcode, string departmentdimension, string budgetdimesion, string budgetdescription, string background, string empno, string @ref, string no, string purchaseRequest, string missionProporsal) {
            object[] results = this.Invoke("FnupdatePaymentmemo", new object[] {
                        datesofActivities,
                        fundcode,
                        programcode,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        background,
                        empno,
                        @ref,
                        no,
                        purchaseRequest,
                        missionProporsal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnupdatePaymentmemoAsync(System.DateTime datesofActivities, string fundcode, string programcode, string departmentdimension, string budgetdimesion, string budgetdescription, string background, string empno, string @ref, string no, string purchaseRequest, string missionProporsal) {
            this.FnupdatePaymentmemoAsync(datesofActivities, fundcode, programcode, departmentdimension, budgetdimesion, budgetdescription, background, empno, @ref, no, purchaseRequest, missionProporsal, null);
        }
        
        /// <remarks/>
        public void FnupdatePaymentmemoAsync(System.DateTime datesofActivities, string fundcode, string programcode, string departmentdimension, string budgetdimesion, string budgetdescription, string background, string empno, string @ref, string no, string purchaseRequest, string missionProporsal, object userState) {
            if ((this.FnupdatePaymentmemoOperationCompleted == null)) {
                this.FnupdatePaymentmemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnupdatePaymentmemoOperationCompleted);
            }
            this.InvokeAsync("FnupdatePaymentmemo", new object[] {
                        datesofActivities,
                        fundcode,
                        programcode,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        background,
                        empno,
                        @ref,
                        no,
                        purchaseRequest,
                        missionProporsal}, this.FnupdatePaymentmemoOperationCompleted, userState);
        }
        
        private void OnFnupdatePaymentmemoOperationCompleted(object arg) {
            if ((this.FnupdatePaymentmemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnupdatePaymentmemoCompleted(this, new FnupdatePaymentmemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertTimeSheet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertTimeSheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnInsertTimeSheet(string name, string projectCode, System.DateTime startdate, string employee, int year, System.DateTime enddate) {
            object[] results = this.Invoke("FnInsertTimeSheet", new object[] {
                        name,
                        projectCode,
                        startdate,
                        employee,
                        year,
                        enddate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertTimeSheetAsync(string name, string projectCode, System.DateTime startdate, string employee, int year, System.DateTime enddate) {
            this.FnInsertTimeSheetAsync(name, projectCode, startdate, employee, year, enddate, null);
        }
        
        /// <remarks/>
        public void FnInsertTimeSheetAsync(string name, string projectCode, System.DateTime startdate, string employee, int year, System.DateTime enddate, object userState) {
            if ((this.FnInsertTimeSheetOperationCompleted == null)) {
                this.FnInsertTimeSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertTimeSheetOperationCompleted);
            }
            this.InvokeAsync("FnInsertTimeSheet", new object[] {
                        name,
                        projectCode,
                        startdate,
                        employee,
                        year,
                        enddate}, this.FnInsertTimeSheetOperationCompleted, userState);
        }
        
        private void OnFnInsertTimeSheetOperationCompleted(object arg) {
            if ((this.FnInsertTimeSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertTimeSheetCompleted(this, new FnInsertTimeSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnModifyTimeSheet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnModifyTimeSheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnModifyTimeSheet(string name, string projectCode, System.DateTime startdate, string code, string employee, int year, int entryNo, System.DateTime endDate) {
            object[] results = this.Invoke("FnModifyTimeSheet", new object[] {
                        name,
                        projectCode,
                        startdate,
                        code,
                        employee,
                        year,
                        entryNo,
                        endDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnModifyTimeSheetAsync(string name, string projectCode, System.DateTime startdate, string code, string employee, int year, int entryNo, System.DateTime endDate) {
            this.FnModifyTimeSheetAsync(name, projectCode, startdate, code, employee, year, entryNo, endDate, null);
        }
        
        /// <remarks/>
        public void FnModifyTimeSheetAsync(string name, string projectCode, System.DateTime startdate, string code, string employee, int year, int entryNo, System.DateTime endDate, object userState) {
            if ((this.FnModifyTimeSheetOperationCompleted == null)) {
                this.FnModifyTimeSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnModifyTimeSheetOperationCompleted);
            }
            this.InvokeAsync("FnModifyTimeSheet", new object[] {
                        name,
                        projectCode,
                        startdate,
                        code,
                        employee,
                        year,
                        entryNo,
                        endDate}, this.FnModifyTimeSheetOperationCompleted, userState);
        }
        
        private void OnFnModifyTimeSheetOperationCompleted(object arg) {
            if ((this.FnModifyTimeSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnModifyTimeSheetCompleted(this, new FnModifyTimeSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetTimesheets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetTimesheets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetTimesheets(string employee) {
            object[] results = this.Invoke("FnGetTimesheets", new object[] {
                        employee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetTimesheetsAsync(string employee) {
            this.FnGetTimesheetsAsync(employee, null);
        }
        
        /// <remarks/>
        public void FnGetTimesheetsAsync(string employee, object userState) {
            if ((this.FnGetTimesheetsOperationCompleted == null)) {
                this.FnGetTimesheetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetTimesheetsOperationCompleted);
            }
            this.InvokeAsync("FnGetTimesheets", new object[] {
                        employee}, this.FnGetTimesheetsOperationCompleted, userState);
        }
        
        private void OnFnGetTimesheetsOperationCompleted(object arg) {
            if ((this.FnGetTimesheetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetTimesheetsCompleted(this, new FnGetTimesheetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertTimesheetLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertTimesheetLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInsertTimesheetLines(int code, System.DateTime from, System.DateTime totime, string comments, string projectCode, string projectText, int hours) {
            this.Invoke("FnInsertTimesheetLines", new object[] {
                        code,
                        from,
                        totime,
                        comments,
                        projectCode,
                        projectText,
                        hours});
        }
        
        /// <remarks/>
        public void FnInsertTimesheetLinesAsync(int code, System.DateTime from, System.DateTime totime, string comments, string projectCode, string projectText, int hours) {
            this.FnInsertTimesheetLinesAsync(code, from, totime, comments, projectCode, projectText, hours, null);
        }
        
        /// <remarks/>
        public void FnInsertTimesheetLinesAsync(int code, System.DateTime from, System.DateTime totime, string comments, string projectCode, string projectText, int hours, object userState) {
            if ((this.FnInsertTimesheetLinesOperationCompleted == null)) {
                this.FnInsertTimesheetLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertTimesheetLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertTimesheetLines", new object[] {
                        code,
                        from,
                        totime,
                        comments,
                        projectCode,
                        projectText,
                        hours}, this.FnInsertTimesheetLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertTimesheetLinesOperationCompleted(object arg) {
            if ((this.FnInsertTimesheetLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertTimesheetLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnModifyTimesheetLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnModifyTimesheetLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnModifyTimesheetLines(int code, System.DateTime from, System.DateTime totime, int entryno, string comments, string projectCode, string projectText, int hours) {
            this.Invoke("FnModifyTimesheetLines", new object[] {
                        code,
                        from,
                        totime,
                        entryno,
                        comments,
                        projectCode,
                        projectText,
                        hours});
        }
        
        /// <remarks/>
        public void FnModifyTimesheetLinesAsync(int code, System.DateTime from, System.DateTime totime, int entryno, string comments, string projectCode, string projectText, int hours) {
            this.FnModifyTimesheetLinesAsync(code, from, totime, entryno, comments, projectCode, projectText, hours, null);
        }
        
        /// <remarks/>
        public void FnModifyTimesheetLinesAsync(int code, System.DateTime from, System.DateTime totime, int entryno, string comments, string projectCode, string projectText, int hours, object userState) {
            if ((this.FnModifyTimesheetLinesOperationCompleted == null)) {
                this.FnModifyTimesheetLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnModifyTimesheetLinesOperationCompleted);
            }
            this.InvokeAsync("FnModifyTimesheetLines", new object[] {
                        code,
                        from,
                        totime,
                        entryno,
                        comments,
                        projectCode,
                        projectText,
                        hours}, this.FnModifyTimesheetLinesOperationCompleted, userState);
        }
        
        private void OnFnModifyTimesheetLinesOperationCompleted(object arg) {
            if ((this.FnModifyTimesheetLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnModifyTimesheetLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertMileage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertMileage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertMileage(string plateNo, string purpose, string county, string nature, decimal repaircost, string comments, System.DateTime startDate, string employee, string pointofdeparture, string destination) {
            object[] results = this.Invoke("FnInsertMileage", new object[] {
                        plateNo,
                        purpose,
                        county,
                        nature,
                        repaircost,
                        comments,
                        startDate,
                        employee,
                        pointofdeparture,
                        destination});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertMileageAsync(string plateNo, string purpose, string county, string nature, decimal repaircost, string comments, System.DateTime startDate, string employee, string pointofdeparture, string destination) {
            this.FnInsertMileageAsync(plateNo, purpose, county, nature, repaircost, comments, startDate, employee, pointofdeparture, destination, null);
        }
        
        /// <remarks/>
        public void FnInsertMileageAsync(string plateNo, string purpose, string county, string nature, decimal repaircost, string comments, System.DateTime startDate, string employee, string pointofdeparture, string destination, object userState) {
            if ((this.FnInsertMileageOperationCompleted == null)) {
                this.FnInsertMileageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertMileageOperationCompleted);
            }
            this.InvokeAsync("FnInsertMileage", new object[] {
                        plateNo,
                        purpose,
                        county,
                        nature,
                        repaircost,
                        comments,
                        startDate,
                        employee,
                        pointofdeparture,
                        destination}, this.FnInsertMileageOperationCompleted, userState);
        }
        
        private void OnFnInsertMileageOperationCompleted(object arg) {
            if ((this.FnInsertMileageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertMileageCompleted(this, new FnInsertMileageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnModifyMileage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnModifyMileage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnModifyMileage(string plateNo, string purpose, string county, string nature, decimal repaircost, string comments, System.DateTime startDate, string employee, string code, string pointofdeparture, string destination) {
            object[] results = this.Invoke("FnModifyMileage", new object[] {
                        plateNo,
                        purpose,
                        county,
                        nature,
                        repaircost,
                        comments,
                        startDate,
                        employee,
                        code,
                        pointofdeparture,
                        destination});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnModifyMileageAsync(string plateNo, string purpose, string county, string nature, decimal repaircost, string comments, System.DateTime startDate, string employee, string code, string pointofdeparture, string destination) {
            this.FnModifyMileageAsync(plateNo, purpose, county, nature, repaircost, comments, startDate, employee, code, pointofdeparture, destination, null);
        }
        
        /// <remarks/>
        public void FnModifyMileageAsync(string plateNo, string purpose, string county, string nature, decimal repaircost, string comments, System.DateTime startDate, string employee, string code, string pointofdeparture, string destination, object userState) {
            if ((this.FnModifyMileageOperationCompleted == null)) {
                this.FnModifyMileageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnModifyMileageOperationCompleted);
            }
            this.InvokeAsync("FnModifyMileage", new object[] {
                        plateNo,
                        purpose,
                        county,
                        nature,
                        repaircost,
                        comments,
                        startDate,
                        employee,
                        code,
                        pointofdeparture,
                        destination}, this.FnModifyMileageOperationCompleted, userState);
        }
        
        private void OnFnModifyMileageOperationCompleted(object arg) {
            if ((this.FnModifyMileageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnModifyMileageCompleted(this, new FnModifyMileageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetMileages", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetMileages_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetMileages(string employee) {
            object[] results = this.Invoke("FnGetMileages", new object[] {
                        employee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetMileagesAsync(string employee) {
            this.FnGetMileagesAsync(employee, null);
        }
        
        /// <remarks/>
        public void FnGetMileagesAsync(string employee, object userState) {
            if ((this.FnGetMileagesOperationCompleted == null)) {
                this.FnGetMileagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetMileagesOperationCompleted);
            }
            this.InvokeAsync("FnGetMileages", new object[] {
                        employee}, this.FnGetMileagesOperationCompleted, userState);
        }
        
        private void OnFnGetMileagesOperationCompleted(object arg) {
            if ((this.FnGetMileagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetMileagesCompleted(this, new FnGetMileagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertMileageLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertMileageLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInsertMileageLines(string code, decimal startodo, decimal endodo, decimal fuelltrs, decimal fuelkshs, string stoplocation) {
            this.Invoke("FnInsertMileageLines", new object[] {
                        code,
                        startodo,
                        endodo,
                        fuelltrs,
                        fuelkshs,
                        stoplocation});
        }
        
        /// <remarks/>
        public void FnInsertMileageLinesAsync(string code, decimal startodo, decimal endodo, decimal fuelltrs, decimal fuelkshs, string stoplocation) {
            this.FnInsertMileageLinesAsync(code, startodo, endodo, fuelltrs, fuelkshs, stoplocation, null);
        }
        
        /// <remarks/>
        public void FnInsertMileageLinesAsync(string code, decimal startodo, decimal endodo, decimal fuelltrs, decimal fuelkshs, string stoplocation, object userState) {
            if ((this.FnInsertMileageLinesOperationCompleted == null)) {
                this.FnInsertMileageLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertMileageLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertMileageLines", new object[] {
                        code,
                        startodo,
                        endodo,
                        fuelltrs,
                        fuelkshs,
                        stoplocation}, this.FnInsertMileageLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertMileageLinesOperationCompleted(object arg) {
            if ((this.FnInsertMileageLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertMileageLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnModifyMileageLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnModifyMileageLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnModifyMileageLines(string code, decimal startodo, decimal endodo, decimal fuelltrs, decimal fuelkshs, int entryno, string stoplocation) {
            this.Invoke("FnModifyMileageLines", new object[] {
                        code,
                        startodo,
                        endodo,
                        fuelltrs,
                        fuelkshs,
                        entryno,
                        stoplocation});
        }
        
        /// <remarks/>
        public void FnModifyMileageLinesAsync(string code, decimal startodo, decimal endodo, decimal fuelltrs, decimal fuelkshs, int entryno, string stoplocation) {
            this.FnModifyMileageLinesAsync(code, startodo, endodo, fuelltrs, fuelkshs, entryno, stoplocation, null);
        }
        
        /// <remarks/>
        public void FnModifyMileageLinesAsync(string code, decimal startodo, decimal endodo, decimal fuelltrs, decimal fuelkshs, int entryno, string stoplocation, object userState) {
            if ((this.FnModifyMileageLinesOperationCompleted == null)) {
                this.FnModifyMileageLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnModifyMileageLinesOperationCompleted);
            }
            this.InvokeAsync("FnModifyMileageLines", new object[] {
                        code,
                        startodo,
                        endodo,
                        fuelltrs,
                        fuelkshs,
                        entryno,
                        stoplocation}, this.FnModifyMileageLinesOperationCompleted, userState);
        }
        
        private void OnFnModifyMileageLinesOperationCompleted(object arg) {
            if ((this.FnModifyMileageLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnModifyMileageLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnFundCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnFundCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnFundCode() {
            object[] results = this.Invoke("FnFundCode", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnFundCodeAsync() {
            this.FnFundCodeAsync(null);
        }
        
        /// <remarks/>
        public void FnFundCodeAsync(object userState) {
            if ((this.FnFundCodeOperationCompleted == null)) {
                this.FnFundCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFundCodeOperationCompleted);
            }
            this.InvokeAsync("FnFundCode", new object[0], this.FnFundCodeOperationCompleted, userState);
        }
        
        private void OnFnFundCodeOperationCompleted(object arg) {
            if ((this.FnFundCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFundCodeCompleted(this, new FnFundCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnProjectCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnProjectCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnProjectCode(string fundCode) {
            object[] results = this.Invoke("FnProjectCode", new object[] {
                        fundCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnProjectCodeAsync(string fundCode) {
            this.FnProjectCodeAsync(fundCode, null);
        }
        
        /// <remarks/>
        public void FnProjectCodeAsync(string fundCode, object userState) {
            if ((this.FnProjectCodeOperationCompleted == null)) {
                this.FnProjectCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnProjectCodeOperationCompleted);
            }
            this.InvokeAsync("FnProjectCode", new object[] {
                        fundCode}, this.FnProjectCodeOperationCompleted, userState);
        }
        
        private void OnFnProjectCodeOperationCompleted(object arg) {
            if ((this.FnProjectCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnProjectCodeCompleted(this, new FnProjectCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnBudgetLineCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnBudgetLineCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnBudgetLineCode(string projectCode) {
            object[] results = this.Invoke("FnBudgetLineCode", new object[] {
                        projectCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnBudgetLineCodeAsync(string projectCode) {
            this.FnBudgetLineCodeAsync(projectCode, null);
        }
        
        /// <remarks/>
        public void FnBudgetLineCodeAsync(string projectCode, object userState) {
            if ((this.FnBudgetLineCodeOperationCompleted == null)) {
                this.FnBudgetLineCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnBudgetLineCodeOperationCompleted);
            }
            this.InvokeAsync("FnBudgetLineCode", new object[] {
                        projectCode}, this.FnBudgetLineCodeOperationCompleted, userState);
        }
        
        private void OnFnBudgetLineCodeOperationCompleted(object arg) {
            if ((this.FnBudgetLineCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnBudgetLineCodeCompleted(this, new FnBudgetLineCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCategoriesCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCategoriesCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCategoriesCode(string budgetLineCode) {
            object[] results = this.Invoke("FnCategoriesCode", new object[] {
                        budgetLineCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCategoriesCodeAsync(string budgetLineCode) {
            this.FnCategoriesCodeAsync(budgetLineCode, null);
        }
        
        /// <remarks/>
        public void FnCategoriesCodeAsync(string budgetLineCode, object userState) {
            if ((this.FnCategoriesCodeOperationCompleted == null)) {
                this.FnCategoriesCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCategoriesCodeOperationCompleted);
            }
            this.InvokeAsync("FnCategoriesCode", new object[] {
                        budgetLineCode}, this.FnCategoriesCodeOperationCompleted, userState);
        }
        
        private void OnFnCategoriesCodeOperationCompleted(object arg) {
            if ((this.FnCategoriesCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCategoriesCodeCompleted(this, new FnCategoriesCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertTAR", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertTAR_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FninsertTAR(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport) {
            object[] results = this.Invoke("FninsertTAR", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        empno,
                        budgetlinecode,
                        briefofproject,
                        fromDate,
                        toDate,
                        travelto,
                        placeofstay,
                        contactPerson,
                        itemsInPosession,
                        modeofTransport});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FninsertTARAsync(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport) {
            this.FninsertTARAsync(fundcode, programcode, purpose, empno, budgetlinecode, briefofproject, fromDate, toDate, travelto, placeofstay, contactPerson, itemsInPosession, modeofTransport, null);
        }
        
        /// <remarks/>
        public void FninsertTARAsync(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport, object userState) {
            if ((this.FninsertTAROperationCompleted == null)) {
                this.FninsertTAROperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertTAROperationCompleted);
            }
            this.InvokeAsync("FninsertTAR", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        empno,
                        budgetlinecode,
                        briefofproject,
                        fromDate,
                        toDate,
                        travelto,
                        placeofstay,
                        contactPerson,
                        itemsInPosession,
                        modeofTransport}, this.FninsertTAROperationCompleted, userState);
        }
        
        private void OnFninsertTAROperationCompleted(object arg) {
            if ((this.FninsertTARCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertTARCompleted(this, new FninsertTARCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertTarLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertTarLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FninsertTarLines(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, decimal frequency) {
            this.Invoke("FninsertTarLines", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        frequency});
        }
        
        /// <remarks/>
        public void FninsertTarLinesAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, decimal frequency) {
            this.FninsertTarLinesAsync(expensecategory, description, unitcost, currency, amount, documentno, frequency, null);
        }
        
        /// <remarks/>
        public void FninsertTarLinesAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, decimal frequency, object userState) {
            if ((this.FninsertTarLinesOperationCompleted == null)) {
                this.FninsertTarLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertTarLinesOperationCompleted);
            }
            this.InvokeAsync("FninsertTarLines", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        frequency}, this.FninsertTarLinesOperationCompleted, userState);
        }
        
        private void OnFninsertTarLinesOperationCompleted(object arg) {
            if ((this.FninsertTarLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertTarLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertFIndings", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertFIndings_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FninsertFIndings(string documentno, string description) {
            this.Invoke("FninsertFIndings", new object[] {
                        documentno,
                        description});
        }
        
        /// <remarks/>
        public void FninsertFIndingsAsync(string documentno, string description) {
            this.FninsertFIndingsAsync(documentno, description, null);
        }
        
        /// <remarks/>
        public void FninsertFIndingsAsync(string documentno, string description, object userState) {
            if ((this.FninsertFIndingsOperationCompleted == null)) {
                this.FninsertFIndingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertFIndingsOperationCompleted);
            }
            this.InvokeAsync("FninsertFIndings", new object[] {
                        documentno,
                        description}, this.FninsertFIndingsOperationCompleted, userState);
        }
        
        private void OnFninsertFIndingsOperationCompleted(object arg) {
            if ((this.FninsertFIndingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertFIndingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertChallenges", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertChallenges_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FninsertChallenges(string documentno, string description) {
            this.Invoke("FninsertChallenges", new object[] {
                        documentno,
                        description});
        }
        
        /// <remarks/>
        public void FninsertChallengesAsync(string documentno, string description) {
            this.FninsertChallengesAsync(documentno, description, null);
        }
        
        /// <remarks/>
        public void FninsertChallengesAsync(string documentno, string description, object userState) {
            if ((this.FninsertChallengesOperationCompleted == null)) {
                this.FninsertChallengesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertChallengesOperationCompleted);
            }
            this.InvokeAsync("FninsertChallenges", new object[] {
                        documentno,
                        description}, this.FninsertChallengesOperationCompleted, userState);
        }
        
        private void OnFninsertChallengesOperationCompleted(object arg) {
            if ((this.FninsertChallengesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertChallengesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertConclusions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertConclusions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FninsertConclusions(string documentno, string description) {
            this.Invoke("FninsertConclusions", new object[] {
                        documentno,
                        description});
        }
        
        /// <remarks/>
        public void FninsertConclusionsAsync(string documentno, string description) {
            this.FninsertConclusionsAsync(documentno, description, null);
        }
        
        /// <remarks/>
        public void FninsertConclusionsAsync(string documentno, string description, object userState) {
            if ((this.FninsertConclusionsOperationCompleted == null)) {
                this.FninsertConclusionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertConclusionsOperationCompleted);
            }
            this.InvokeAsync("FninsertConclusions", new object[] {
                        documentno,
                        description}, this.FninsertConclusionsOperationCompleted, userState);
        }
        
        private void OnFninsertConclusionsOperationCompleted(object arg) {
            if ((this.FninsertConclusionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertConclusionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnStandardTexts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnStandardTexts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnStandardTexts() {
            object[] results = this.Invoke("FnStandardTexts", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnStandardTextsAsync() {
            this.FnStandardTextsAsync(null);
        }
        
        /// <remarks/>
        public void FnStandardTextsAsync(object userState) {
            if ((this.FnStandardTextsOperationCompleted == null)) {
                this.FnStandardTextsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnStandardTextsOperationCompleted);
            }
            this.InvokeAsync("FnStandardTexts", new object[0], this.FnStandardTextsOperationCompleted, userState);
        }
        
        private void OnFnStandardTextsOperationCompleted(object arg) {
            if ((this.FnStandardTextsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnStandardTextsCompleted(this, new FnStandardTextsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertBudgetActivity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertBudgetActivity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FninsertBudgetActivity(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport) {
            object[] results = this.Invoke("FninsertBudgetActivity", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        empno,
                        budgetlinecode,
                        briefofproject,
                        fromDate,
                        toDate,
                        travelto,
                        placeofstay,
                        contactPerson,
                        itemsInPosession,
                        modeofTransport});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FninsertBudgetActivityAsync(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport) {
            this.FninsertBudgetActivityAsync(fundcode, programcode, purpose, empno, budgetlinecode, briefofproject, fromDate, toDate, travelto, placeofstay, contactPerson, itemsInPosession, modeofTransport, null);
        }
        
        /// <remarks/>
        public void FninsertBudgetActivityAsync(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport, object userState) {
            if ((this.FninsertBudgetActivityOperationCompleted == null)) {
                this.FninsertBudgetActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertBudgetActivityOperationCompleted);
            }
            this.InvokeAsync("FninsertBudgetActivity", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        empno,
                        budgetlinecode,
                        briefofproject,
                        fromDate,
                        toDate,
                        travelto,
                        placeofstay,
                        contactPerson,
                        itemsInPosession,
                        modeofTransport}, this.FninsertBudgetActivityOperationCompleted, userState);
        }
        
        private void OnFninsertBudgetActivityOperationCompleted(object arg) {
            if ((this.FninsertBudgetActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertBudgetActivityCompleted(this, new FninsertBudgetActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertBudgetActivityLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertBudgetActivityLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FninsertBudgetActivityLines(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, string shortcutdimensions, decimal frequency) {
            this.Invoke("FninsertBudgetActivityLines", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        shortcutdimensions,
                        frequency});
        }
        
        /// <remarks/>
        public void FninsertBudgetActivityLinesAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, string shortcutdimensions, decimal frequency) {
            this.FninsertBudgetActivityLinesAsync(expensecategory, description, unitcost, currency, amount, documentno, shortcutdimensions, frequency, null);
        }
        
        /// <remarks/>
        public void FninsertBudgetActivityLinesAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, string shortcutdimensions, decimal frequency, object userState) {
            if ((this.FninsertBudgetActivityLinesOperationCompleted == null)) {
                this.FninsertBudgetActivityLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertBudgetActivityLinesOperationCompleted);
            }
            this.InvokeAsync("FninsertBudgetActivityLines", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        shortcutdimensions,
                        frequency}, this.FninsertBudgetActivityLinesOperationCompleted, userState);
        }
        
        private void OnFninsertBudgetActivityLinesOperationCompleted(object arg) {
            if ((this.FninsertBudgetActivityLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertBudgetActivityLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdateBudgetActivity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdateBudgetActivity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateBudgetActivity(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport, string code) {
            object[] results = this.Invoke("FnUpdateBudgetActivity", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        empno,
                        budgetlinecode,
                        briefofproject,
                        fromDate,
                        toDate,
                        travelto,
                        placeofstay,
                        contactPerson,
                        itemsInPosession,
                        modeofTransport,
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateBudgetActivityAsync(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport, string code) {
            this.FnUpdateBudgetActivityAsync(fundcode, programcode, purpose, empno, budgetlinecode, briefofproject, fromDate, toDate, travelto, placeofstay, contactPerson, itemsInPosession, modeofTransport, code, null);
        }
        
        /// <remarks/>
        public void FnUpdateBudgetActivityAsync(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport, string code, object userState) {
            if ((this.FnUpdateBudgetActivityOperationCompleted == null)) {
                this.FnUpdateBudgetActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateBudgetActivityOperationCompleted);
            }
            this.InvokeAsync("FnUpdateBudgetActivity", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        empno,
                        budgetlinecode,
                        briefofproject,
                        fromDate,
                        toDate,
                        travelto,
                        placeofstay,
                        contactPerson,
                        itemsInPosession,
                        modeofTransport,
                        code}, this.FnUpdateBudgetActivityOperationCompleted, userState);
        }
        
        private void OnFnUpdateBudgetActivityOperationCompleted(object arg) {
            if ((this.FnUpdateBudgetActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateBudgetActivityCompleted(this, new FnUpdateBudgetActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdateBudgetActivityLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdateBudgetActivityLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnUpdateBudgetActivityLines(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, string shortcutdimensions, decimal frequency, int llineno) {
            this.Invoke("FnUpdateBudgetActivityLines", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        shortcutdimensions,
                        frequency,
                        llineno});
        }
        
        /// <remarks/>
        public void FnUpdateBudgetActivityLinesAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, string shortcutdimensions, decimal frequency, int llineno) {
            this.FnUpdateBudgetActivityLinesAsync(expensecategory, description, unitcost, currency, amount, documentno, shortcutdimensions, frequency, llineno, null);
        }
        
        /// <remarks/>
        public void FnUpdateBudgetActivityLinesAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, string shortcutdimensions, decimal frequency, int llineno, object userState) {
            if ((this.FnUpdateBudgetActivityLinesOperationCompleted == null)) {
                this.FnUpdateBudgetActivityLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateBudgetActivityLinesOperationCompleted);
            }
            this.InvokeAsync("FnUpdateBudgetActivityLines", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        shortcutdimensions,
                        frequency,
                        llineno}, this.FnUpdateBudgetActivityLinesOperationCompleted, userState);
        }
        
        private void OnFnUpdateBudgetActivityLinesOperationCompleted(object arg) {
            if ((this.FnUpdateBudgetActivityLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateBudgetActivityLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdateTAR", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdateTAR_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateTAR(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport, string code) {
            object[] results = this.Invoke("FnUpdateTAR", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        empno,
                        budgetlinecode,
                        briefofproject,
                        fromDate,
                        toDate,
                        travelto,
                        placeofstay,
                        contactPerson,
                        itemsInPosession,
                        modeofTransport,
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateTARAsync(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport, string code) {
            this.FnUpdateTARAsync(fundcode, programcode, purpose, empno, budgetlinecode, briefofproject, fromDate, toDate, travelto, placeofstay, contactPerson, itemsInPosession, modeofTransport, code, null);
        }
        
        /// <remarks/>
        public void FnUpdateTARAsync(string fundcode, string programcode, string purpose, string empno, string budgetlinecode, string briefofproject, System.DateTime fromDate, System.DateTime toDate, string travelto, string placeofstay, string contactPerson, string itemsInPosession, string modeofTransport, string code, object userState) {
            if ((this.FnUpdateTAROperationCompleted == null)) {
                this.FnUpdateTAROperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateTAROperationCompleted);
            }
            this.InvokeAsync("FnUpdateTAR", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        empno,
                        budgetlinecode,
                        briefofproject,
                        fromDate,
                        toDate,
                        travelto,
                        placeofstay,
                        contactPerson,
                        itemsInPosession,
                        modeofTransport,
                        code}, this.FnUpdateTAROperationCompleted, userState);
        }
        
        private void OnFnUpdateTAROperationCompleted(object arg) {
            if ((this.FnUpdateTARCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateTARCompleted(this, new FnUpdateTARCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdateTARLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdateTARLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnUpdateTARLines(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, string shortcutdimensions, decimal frequency, int llineno) {
            this.Invoke("FnUpdateTARLines", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        shortcutdimensions,
                        frequency,
                        llineno});
        }
        
        /// <remarks/>
        public void FnUpdateTARLinesAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, string shortcutdimensions, decimal frequency, int llineno) {
            this.FnUpdateTARLinesAsync(expensecategory, description, unitcost, currency, amount, documentno, shortcutdimensions, frequency, llineno, null);
        }
        
        /// <remarks/>
        public void FnUpdateTARLinesAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, string shortcutdimensions, decimal frequency, int llineno, object userState) {
            if ((this.FnUpdateTARLinesOperationCompleted == null)) {
                this.FnUpdateTARLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateTARLinesOperationCompleted);
            }
            this.InvokeAsync("FnUpdateTARLines", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        shortcutdimensions,
                        frequency,
                        llineno}, this.FnUpdateTARLinesOperationCompleted, userState);
        }
        
        private void OnFnUpdateTARLinesOperationCompleted(object arg) {
            if ((this.FnUpdateTARLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateTARLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAdverts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAdverts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAdverts() {
            object[] results = this.Invoke("FnAdverts", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAdvertsAsync() {
            this.FnAdvertsAsync(null);
        }
        
        /// <remarks/>
        public void FnAdvertsAsync(object userState) {
            if ((this.FnAdvertsOperationCompleted == null)) {
                this.FnAdvertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAdvertsOperationCompleted);
            }
            this.InvokeAsync("FnAdverts", new object[0], this.FnAdvertsOperationCompleted, userState);
        }
        
        private void OnFnAdvertsOperationCompleted(object arg) {
            if ((this.FnAdvertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAdvertsCompleted(this, new FnAdvertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertApplicationProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertApplicationProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FninsertApplicationProfile(string firstname, string lastName, string email, string idnumber, string phoneNumber, string username, string password, string address) {
            this.Invoke("FninsertApplicationProfile", new object[] {
                        firstname,
                        lastName,
                        email,
                        idnumber,
                        phoneNumber,
                        username,
                        password,
                        address});
        }
        
        /// <remarks/>
        public void FninsertApplicationProfileAsync(string firstname, string lastName, string email, string idnumber, string phoneNumber, string username, string password, string address) {
            this.FninsertApplicationProfileAsync(firstname, lastName, email, idnumber, phoneNumber, username, password, address, null);
        }
        
        /// <remarks/>
        public void FninsertApplicationProfileAsync(string firstname, string lastName, string email, string idnumber, string phoneNumber, string username, string password, string address, object userState) {
            if ((this.FninsertApplicationProfileOperationCompleted == null)) {
                this.FninsertApplicationProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertApplicationProfileOperationCompleted);
            }
            this.InvokeAsync("FninsertApplicationProfile", new object[] {
                        firstname,
                        lastName,
                        email,
                        idnumber,
                        phoneNumber,
                        username,
                        password,
                        address}, this.FninsertApplicationProfileOperationCompleted, userState);
        }
        
        private void OnFninsertApplicationProfileOperationCompleted(object arg) {
            if ((this.FninsertApplicationProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertApplicationProfileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnMemberProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnMemberProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnMemberProfile(string username) {
            object[] results = this.Invoke("FnMemberProfile", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnMemberProfileAsync(string username) {
            this.FnMemberProfileAsync(username, null);
        }
        
        /// <remarks/>
        public void FnMemberProfileAsync(string username, object userState) {
            if ((this.FnMemberProfileOperationCompleted == null)) {
                this.FnMemberProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnMemberProfileOperationCompleted);
            }
            this.InvokeAsync("FnMemberProfile", new object[] {
                        username}, this.FnMemberProfileOperationCompleted, userState);
        }
        
        private void OnFnMemberProfileOperationCompleted(object arg) {
            if ((this.FnMemberProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnMemberProfileCompleted(this, new FnMemberProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnprofileQualificationsInsert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnprofileQualificationsInsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnprofileQualificationsInsert(string employeeNo, System.DateTime fromdate, string qualificationtype, System.DateTime todate, string institution, string description) {
            this.Invoke("FnprofileQualificationsInsert", new object[] {
                        employeeNo,
                        fromdate,
                        qualificationtype,
                        todate,
                        institution,
                        description});
        }
        
        /// <remarks/>
        public void FnprofileQualificationsInsertAsync(string employeeNo, System.DateTime fromdate, string qualificationtype, System.DateTime todate, string institution, string description) {
            this.FnprofileQualificationsInsertAsync(employeeNo, fromdate, qualificationtype, todate, institution, description, null);
        }
        
        /// <remarks/>
        public void FnprofileQualificationsInsertAsync(string employeeNo, System.DateTime fromdate, string qualificationtype, System.DateTime todate, string institution, string description, object userState) {
            if ((this.FnprofileQualificationsInsertOperationCompleted == null)) {
                this.FnprofileQualificationsInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnprofileQualificationsInsertOperationCompleted);
            }
            this.InvokeAsync("FnprofileQualificationsInsert", new object[] {
                        employeeNo,
                        fromdate,
                        qualificationtype,
                        todate,
                        institution,
                        description}, this.FnprofileQualificationsInsertOperationCompleted, userState);
        }
        
        private void OnFnprofileQualificationsInsertOperationCompleted(object arg) {
            if ((this.FnprofileQualificationsInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnprofileQualificationsInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLookup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLookup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLookup() {
            object[] results = this.Invoke("FnLookup", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLookupAsync() {
            this.FnLookupAsync(null);
        }
        
        /// <remarks/>
        public void FnLookupAsync(object userState) {
            if ((this.FnLookupOperationCompleted == null)) {
                this.FnLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLookupOperationCompleted);
            }
            this.InvokeAsync("FnLookup", new object[0], this.FnLookupOperationCompleted, userState);
        }
        
        private void OnFnLookupOperationCompleted(object arg) {
            if ((this.FnLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLookupCompleted(this, new FnLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetQualifications(string username) {
            object[] results = this.Invoke("FnGetQualifications", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetQualificationsAsync(string username) {
            this.FnGetQualificationsAsync(username, null);
        }
        
        /// <remarks/>
        public void FnGetQualificationsAsync(string username, object userState) {
            if ((this.FnGetQualificationsOperationCompleted == null)) {
                this.FnGetQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnGetQualifications", new object[] {
                        username}, this.FnGetQualificationsOperationCompleted, userState);
        }
        
        private void OnFnGetQualificationsOperationCompleted(object arg) {
            if ((this.FnGetQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetQualificationsCompleted(this, new FnGetQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnApply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnApply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnApply(string username, string jobid) {
            this.Invoke("FnApply", new object[] {
                        username,
                        jobid});
        }
        
        /// <remarks/>
        public void FnApplyAsync(string username, string jobid) {
            this.FnApplyAsync(username, jobid, null);
        }
        
        /// <remarks/>
        public void FnApplyAsync(string username, string jobid, object userState) {
            if ((this.FnApplyOperationCompleted == null)) {
                this.FnApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyOperationCompleted);
            }
            this.InvokeAsync("FnApply", new object[] {
                        username,
                        jobid}, this.FnApplyOperationCompleted, userState);
        }
        
        private void OnFnApplyOperationCompleted(object arg) {
            if ((this.FnApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAdvert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAdvert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAdvert(string jobid) {
            object[] results = this.Invoke("FnAdvert", new object[] {
                        jobid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAdvertAsync(string jobid) {
            this.FnAdvertAsync(jobid, null);
        }
        
        /// <remarks/>
        public void FnAdvertAsync(string jobid, object userState) {
            if ((this.FnAdvertOperationCompleted == null)) {
                this.FnAdvertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAdvertOperationCompleted);
            }
            this.InvokeAsync("FnAdvert", new object[] {
                        jobid}, this.FnAdvertOperationCompleted, userState);
        }
        
        private void OnFnAdvertOperationCompleted(object arg) {
            if ((this.FnAdvertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAdvertCompleted(this, new FnAdvertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAdvertApplied", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAdvertApplied_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAdvertApplied(string username) {
            object[] results = this.Invoke("FnAdvertApplied", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAdvertAppliedAsync(string username) {
            this.FnAdvertAppliedAsync(username, null);
        }
        
        /// <remarks/>
        public void FnAdvertAppliedAsync(string username, object userState) {
            if ((this.FnAdvertAppliedOperationCompleted == null)) {
                this.FnAdvertAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAdvertAppliedOperationCompleted);
            }
            this.InvokeAsync("FnAdvertApplied", new object[] {
                        username}, this.FnAdvertAppliedOperationCompleted, userState);
        }
        
        private void OnFnAdvertAppliedOperationCompleted(object arg) {
            if ((this.FnAdvertAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAdvertAppliedCompleted(this, new FnAdvertAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDepartmentValueLeave", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDepartmentValueLeave_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDepartmentValueLeave() {
            object[] results = this.Invoke("FnDepartmentValueLeave", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDepartmentValueLeaveAsync() {
            this.FnDepartmentValueLeaveAsync(null);
        }
        
        /// <remarks/>
        public void FnDepartmentValueLeaveAsync(object userState) {
            if ((this.FnDepartmentValueLeaveOperationCompleted == null)) {
                this.FnDepartmentValueLeaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDepartmentValueLeaveOperationCompleted);
            }
            this.InvokeAsync("FnDepartmentValueLeave", new object[0], this.FnDepartmentValueLeaveOperationCompleted, userState);
        }
        
        private void OnFnDepartmentValueLeaveOperationCompleted(object arg) {
            if ((this.FnDepartmentValueLeaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDepartmentValueLeaveCompleted(this, new FnDepartmentValueLeaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInsertAppraisal(string jsonData) {
            this.Invoke("FnInsertAppraisal", new object[] {
                        jsonData});
        }
        
        /// <remarks/>
        public void FnInsertAppraisalAsync(string jsonData) {
            this.FnInsertAppraisalAsync(jsonData, null);
        }
        
        /// <remarks/>
        public void FnInsertAppraisalAsync(string jsonData, object userState) {
            if ((this.FnInsertAppraisalOperationCompleted == null)) {
                this.FnInsertAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnInsertAppraisal", new object[] {
                        jsonData}, this.FnInsertAppraisalOperationCompleted, userState);
        }
        
        private void OnFnInsertAppraisalOperationCompleted(object arg) {
            if ((this.FnInsertAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertAppraisalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdateAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdateAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnUpdateAppraisal(string jsonData) {
            this.Invoke("FnUpdateAppraisal", new object[] {
                        jsonData});
        }
        
        /// <remarks/>
        public void FnUpdateAppraisalAsync(string jsonData) {
            this.FnUpdateAppraisalAsync(jsonData, null);
        }
        
        /// <remarks/>
        public void FnUpdateAppraisalAsync(string jsonData, object userState) {
            if ((this.FnUpdateAppraisalOperationCompleted == null)) {
                this.FnUpdateAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnUpdateAppraisal", new object[] {
                        jsonData}, this.FnUpdateAppraisalOperationCompleted, userState);
        }
        
        private void OnFnUpdateAppraisalOperationCompleted(object arg) {
            if ((this.FnUpdateAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateAppraisalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAppraisalList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAppraisalList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAppraisalList(string empNo) {
            object[] results = this.Invoke("FnAppraisalList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAppraisalListAsync(string empNo) {
            this.FnAppraisalListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnAppraisalListAsync(string empNo, object userState) {
            if ((this.FnAppraisalListOperationCompleted == null)) {
                this.FnAppraisalListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAppraisalListOperationCompleted);
            }
            this.InvokeAsync("FnAppraisalList", new object[] {
                        empNo}, this.FnAppraisalListOperationCompleted, userState);
        }
        
        private void OnFnAppraisalListOperationCompleted(object arg) {
            if ((this.FnAppraisalListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAppraisalListCompleted(this, new FnAppraisalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestRequisitionCreate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestRequisitionCreate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnImprestRequisitionCreate(string employee_No, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date_Required, string dept_Code, string description, string responsibilityCenter, string bankAccount) {
            this.Invoke("FnImprestRequisitionCreate", new object[] {
                        employee_No,
                        date_Required,
                        dept_Code,
                        description,
                        responsibilityCenter,
                        bankAccount});
        }
        
        /// <remarks/>
        public void FnImprestRequisitionCreateAsync(string employee_No, System.DateTime date_Required, string dept_Code, string description, string responsibilityCenter, string bankAccount) {
            this.FnImprestRequisitionCreateAsync(employee_No, date_Required, dept_Code, description, responsibilityCenter, bankAccount, null);
        }
        
        /// <remarks/>
        public void FnImprestRequisitionCreateAsync(string employee_No, System.DateTime date_Required, string dept_Code, string description, string responsibilityCenter, string bankAccount, object userState) {
            if ((this.FnImprestRequisitionCreateOperationCompleted == null)) {
                this.FnImprestRequisitionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestRequisitionCreateOperationCompleted);
            }
            this.InvokeAsync("FnImprestRequisitionCreate", new object[] {
                        employee_No,
                        date_Required,
                        dept_Code,
                        description,
                        responsibilityCenter,
                        bankAccount}, this.FnImprestRequisitionCreateOperationCompleted, userState);
        }
        
        private void OnFnImprestRequisitionCreateOperationCompleted(object arg) {
            if ((this.FnImprestRequisitionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestRequisitionCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnLeaveApplication(string employeeNo, string leaveType, decimal appliedDays, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, string reliever, string pendingtasks) {
            this.Invoke("FnLeaveApplication", new object[] {
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        reliever,
                        pendingtasks});
        }
        
        /// <remarks/>
        public void FnLeaveApplicationAsync(string employeeNo, string leaveType, decimal appliedDays, System.DateTime startDate, string reliever, string pendingtasks) {
            this.FnLeaveApplicationAsync(employeeNo, leaveType, appliedDays, startDate, reliever, pendingtasks, null);
        }
        
        /// <remarks/>
        public void FnLeaveApplicationAsync(string employeeNo, string leaveType, decimal appliedDays, System.DateTime startDate, string reliever, string pendingtasks, object userState) {
            if ((this.FnLeaveApplicationOperationCompleted == null)) {
                this.FnLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("FnLeaveApplication", new object[] {
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        reliever,
                        pendingtasks}, this.FnLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnFnLeaveApplicationOperationCompleted(object arg) {
            if ((this.FnLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLeaveApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLeaveApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLeaveApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnLeaveApprovalRequest(string leaveApplicationCode) {
            this.Invoke("FnLeaveApprovalRequest", new object[] {
                        leaveApplicationCode});
        }
        
        /// <remarks/>
        public void FnLeaveApprovalRequestAsync(string leaveApplicationCode) {
            this.FnLeaveApprovalRequestAsync(leaveApplicationCode, null);
        }
        
        /// <remarks/>
        public void FnLeaveApprovalRequestAsync(string leaveApplicationCode, object userState) {
            if ((this.FnLeaveApprovalRequestOperationCompleted == null)) {
                this.FnLeaveApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLeaveApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FnLeaveApprovalRequest", new object[] {
                        leaveApplicationCode}, this.FnLeaveApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFnLeaveApprovalRequestOperationCompleted(object arg) {
            if ((this.FnLeaveApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLeaveApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnImprestApprovalRequest(string imprestNo) {
            this.Invoke("FnImprestApprovalRequest", new object[] {
                        imprestNo});
        }
        
        /// <remarks/>
        public void FnImprestApprovalRequestAsync(string imprestNo) {
            this.FnImprestApprovalRequestAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void FnImprestApprovalRequestAsync(string imprestNo, object userState) {
            if ((this.FnImprestApprovalRequestOperationCompleted == null)) {
                this.FnImprestApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FnImprestApprovalRequest", new object[] {
                        imprestNo}, this.FnImprestApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFnImprestApprovalRequestOperationCompleted(object arg) {
            if ((this.FnImprestApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetPayslip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetPayslip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetPayslip(string employee_No, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime payPeriod, ref string bigText) {
            object[] results = this.Invoke("FnGetPayslip", new object[] {
                        employee_No,
                        payPeriod,
                        bigText});
            bigText = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPayslipAsync(string employee_No, System.DateTime payPeriod, string bigText) {
            this.FnGetPayslipAsync(employee_No, payPeriod, bigText, null);
        }
        
        /// <remarks/>
        public void FnGetPayslipAsync(string employee_No, System.DateTime payPeriod, string bigText, object userState) {
            if ((this.FnGetPayslipOperationCompleted == null)) {
                this.FnGetPayslipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPayslipOperationCompleted);
            }
            this.InvokeAsync("FnGetPayslip", new object[] {
                        employee_No,
                        payPeriod,
                        bigText}, this.FnGetPayslipOperationCompleted, userState);
        }
        
        private void OnFnGetPayslipOperationCompleted(object arg) {
            if ((this.FnGetPayslipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPayslipCompleted(this, new FnGetPayslipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestRequisitionUpdate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestRequisitionUpdate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnImprestRequisitionUpdate(string employee_No, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date_Required, string dept_Code, string description, string responsibilityCenter, string docNo) {
            this.Invoke("FnImprestRequisitionUpdate", new object[] {
                        employee_No,
                        date_Required,
                        dept_Code,
                        description,
                        responsibilityCenter,
                        docNo});
        }
        
        /// <remarks/>
        public void FnImprestRequisitionUpdateAsync(string employee_No, System.DateTime date_Required, string dept_Code, string description, string responsibilityCenter, string docNo) {
            this.FnImprestRequisitionUpdateAsync(employee_No, date_Required, dept_Code, description, responsibilityCenter, docNo, null);
        }
        
        /// <remarks/>
        public void FnImprestRequisitionUpdateAsync(string employee_No, System.DateTime date_Required, string dept_Code, string description, string responsibilityCenter, string docNo, object userState) {
            if ((this.FnImprestRequisitionUpdateOperationCompleted == null)) {
                this.FnImprestRequisitionUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestRequisitionUpdateOperationCompleted);
            }
            this.InvokeAsync("FnImprestRequisitionUpdate", new object[] {
                        employee_No,
                        date_Required,
                        dept_Code,
                        description,
                        responsibilityCenter,
                        docNo}, this.FnImprestRequisitionUpdateOperationCompleted, userState);
        }
        
        private void OnFnImprestRequisitionUpdateOperationCompleted(object arg) {
            if ((this.FnImprestRequisitionUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestRequisitionUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnApproveRecords", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnApproveRecords_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnApproveRecords(string documentNumber, string approverId) {
            this.Invoke("FnApproveRecords", new object[] {
                        documentNumber,
                        approverId});
        }
        
        /// <remarks/>
        public void FnApproveRecordsAsync(string documentNumber, string approverId) {
            this.FnApproveRecordsAsync(documentNumber, approverId, null);
        }
        
        /// <remarks/>
        public void FnApproveRecordsAsync(string documentNumber, string approverId, object userState) {
            if ((this.FnApproveRecordsOperationCompleted == null)) {
                this.FnApproveRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApproveRecordsOperationCompleted);
            }
            this.InvokeAsync("FnApproveRecords", new object[] {
                        documentNumber,
                        approverId}, this.FnApproveRecordsOperationCompleted, userState);
        }
        
        private void OnFnApproveRecordsOperationCompleted(object arg) {
            if ((this.FnApproveRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApproveRecordsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLeaveCancelApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLeaveCancelApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnLeaveCancelApprovalRequest(string leaveApplicationCode) {
            this.Invoke("FnLeaveCancelApprovalRequest", new object[] {
                        leaveApplicationCode});
        }
        
        /// <remarks/>
        public void FnLeaveCancelApprovalRequestAsync(string leaveApplicationCode) {
            this.FnLeaveCancelApprovalRequestAsync(leaveApplicationCode, null);
        }
        
        /// <remarks/>
        public void FnLeaveCancelApprovalRequestAsync(string leaveApplicationCode, object userState) {
            if ((this.FnLeaveCancelApprovalRequestOperationCompleted == null)) {
                this.FnLeaveCancelApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLeaveCancelApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FnLeaveCancelApprovalRequest", new object[] {
                        leaveApplicationCode}, this.FnLeaveCancelApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFnLeaveCancelApprovalRequestOperationCompleted(object arg) {
            if ((this.FnLeaveCancelApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLeaveCancelApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestCancelApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestCancelApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnImprestCancelApprovalRequest(string imprestNo) {
            this.Invoke("FnImprestCancelApprovalRequest", new object[] {
                        imprestNo});
        }
        
        /// <remarks/>
        public void FnImprestCancelApprovalRequestAsync(string imprestNo) {
            this.FnImprestCancelApprovalRequestAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void FnImprestCancelApprovalRequestAsync(string imprestNo, object userState) {
            if ((this.FnImprestCancelApprovalRequestOperationCompleted == null)) {
                this.FnImprestCancelApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestCancelApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FnImprestCancelApprovalRequest", new object[] {
                        imprestNo}, this.FnImprestCancelApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFnImprestCancelApprovalRequestOperationCompleted(object arg) {
            if ((this.FnImprestCancelApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestCancelApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnRejectApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnRejectApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnRejectApprovalRequest(string documentNumber, string approverId) {
            this.Invoke("FnRejectApprovalRequest", new object[] {
                        documentNumber,
                        approverId});
        }
        
        /// <remarks/>
        public void FnRejectApprovalRequestAsync(string documentNumber, string approverId) {
            this.FnRejectApprovalRequestAsync(documentNumber, approverId, null);
        }
        
        /// <remarks/>
        public void FnRejectApprovalRequestAsync(string documentNumber, string approverId, object userState) {
            if ((this.FnRejectApprovalRequestOperationCompleted == null)) {
                this.FnRejectApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRejectApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FnRejectApprovalRequest", new object[] {
                        documentNumber,
                        approverId}, this.FnRejectApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFnRejectApprovalRequestOperationCompleted(object arg) {
            if ((this.FnRejectApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRejectApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnImprestSurrenderApproval(string impNo, bool request) {
            this.Invoke("FnImprestSurrenderApproval", new object[] {
                        impNo,
                        request});
        }
        
        /// <remarks/>
        public void FnImprestSurrenderApprovalAsync(string impNo, bool request) {
            this.FnImprestSurrenderApprovalAsync(impNo, request, null);
        }
        
        /// <remarks/>
        public void FnImprestSurrenderApprovalAsync(string impNo, bool request, object userState) {
            if ((this.FnImprestSurrenderApprovalOperationCompleted == null)) {
                this.FnImprestSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("FnImprestSurrenderApproval", new object[] {
                        impNo,
                        request}, this.FnImprestSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnFnImprestSurrenderApprovalOperationCompleted(object arg) {
            if ((this.FnImprestSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestSurrenderApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInserImprest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInserImprest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInserImprest(string impno, string cashier2) {
            this.Invoke("FnInserImprest", new object[] {
                        impno,
                        cashier2});
        }
        
        /// <remarks/>
        public void FnInserImprestAsync(string impno, string cashier2) {
            this.FnInserImprestAsync(impno, cashier2, null);
        }
        
        /// <remarks/>
        public void FnInserImprestAsync(string impno, string cashier2, object userState) {
            if ((this.FnInserImprestOperationCompleted == null)) {
                this.FnInserImprestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInserImprestOperationCompleted);
            }
            this.InvokeAsync("FnInserImprest", new object[] {
                        impno,
                        cashier2}, this.FnInserImprestOperationCompleted, userState);
        }
        
        private void OnFnInserImprestOperationCompleted(object arg) {
            if ((this.FnInserImprestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInserImprestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:UpdateLeave", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="UpdateLeave_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLeave(string leaveNo, string leavetype, decimal applieddays, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returndate, string sendercomments, string relieverno, string responsibilitycenter) {
            this.Invoke("UpdateLeave", new object[] {
                        leaveNo,
                        leavetype,
                        applieddays,
                        startdate,
                        enddate,
                        returndate,
                        sendercomments,
                        relieverno,
                        responsibilitycenter});
        }
        
        /// <remarks/>
        public void UpdateLeaveAsync(string leaveNo, string leavetype, decimal applieddays, System.DateTime startdate, System.DateTime enddate, System.DateTime returndate, string sendercomments, string relieverno, string responsibilitycenter) {
            this.UpdateLeaveAsync(leaveNo, leavetype, applieddays, startdate, enddate, returndate, sendercomments, relieverno, responsibilitycenter, null);
        }
        
        /// <remarks/>
        public void UpdateLeaveAsync(string leaveNo, string leavetype, decimal applieddays, System.DateTime startdate, System.DateTime enddate, System.DateTime returndate, string sendercomments, string relieverno, string responsibilitycenter, object userState) {
            if ((this.UpdateLeaveOperationCompleted == null)) {
                this.UpdateLeaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLeaveOperationCompleted);
            }
            this.InvokeAsync("UpdateLeave", new object[] {
                        leaveNo,
                        leavetype,
                        applieddays,
                        startdate,
                        enddate,
                        returndate,
                        sendercomments,
                        relieverno,
                        responsibilitycenter}, this.UpdateLeaveOperationCompleted, userState);
        }
        
        private void OnUpdateLeaveOperationCompleted(object arg) {
            if ((this.UpdateLeaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLeaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetEmployeeDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetEmployeeDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetEmployeeDetails(string employeeNo) {
            object[] results = this.Invoke("FnGetEmployeeDetails", new object[] {
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetEmployeeDetailsAsync(string employeeNo) {
            this.FnGetEmployeeDetailsAsync(employeeNo, null);
        }
        
        /// <remarks/>
        public void FnGetEmployeeDetailsAsync(string employeeNo, object userState) {
            if ((this.FnGetEmployeeDetailsOperationCompleted == null)) {
                this.FnGetEmployeeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetEmployeeDetailsOperationCompleted);
            }
            this.InvokeAsync("FnGetEmployeeDetails", new object[] {
                        employeeNo}, this.FnGetEmployeeDetailsOperationCompleted, userState);
        }
        
        private void OnFnGetEmployeeDetailsOperationCompleted(object arg) {
            if ((this.FnGetEmployeeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetEmployeeDetailsCompleted(this, new FnGetEmployeeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetPaymentInformation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetPaymentInformation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPaymentInformation(string no) {
            object[] results = this.Invoke("FnGetPaymentInformation", new object[] {
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPaymentInformationAsync(string no) {
            this.FnGetPaymentInformationAsync(no, null);
        }
        
        /// <remarks/>
        public void FnGetPaymentInformationAsync(string no, object userState) {
            if ((this.FnGetPaymentInformationOperationCompleted == null)) {
                this.FnGetPaymentInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPaymentInformationOperationCompleted);
            }
            this.InvokeAsync("FnGetPaymentInformation", new object[] {
                        no}, this.FnGetPaymentInformationOperationCompleted, userState);
        }
        
        private void OnFnGetPaymentInformationOperationCompleted(object arg) {
            if ((this.FnGetPaymentInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPaymentInformationCompleted(this, new FnGetPaymentInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetSummaryPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetSummaryPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetSummaryPayment(string no, string payPeriod) {
            object[] results = this.Invoke("FnGetSummaryPayment", new object[] {
                        no,
                        payPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetSummaryPaymentAsync(string no, string payPeriod) {
            this.FnGetSummaryPaymentAsync(no, payPeriod, null);
        }
        
        /// <remarks/>
        public void FnGetSummaryPaymentAsync(string no, string payPeriod, object userState) {
            if ((this.FnGetSummaryPaymentOperationCompleted == null)) {
                this.FnGetSummaryPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetSummaryPaymentOperationCompleted);
            }
            this.InvokeAsync("FnGetSummaryPayment", new object[] {
                        no,
                        payPeriod}, this.FnGetSummaryPaymentOperationCompleted, userState);
        }
        
        private void OnFnGetSummaryPaymentOperationCompleted(object arg) {
            if ((this.FnGetSummaryPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetSummaryPaymentCompleted(this, new FnGetSummaryPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fnlogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fnlogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool Fnlogin(string user, string password) {
            object[] results = this.Invoke("Fnlogin", new object[] {
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnloginAsync(string user, string password) {
            this.FnloginAsync(user, password, null);
        }
        
        /// <remarks/>
        public void FnloginAsync(string user, string password, object userState) {
            if ((this.FnloginOperationCompleted == null)) {
                this.FnloginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnloginOperationCompleted);
            }
            this.InvokeAsync("Fnlogin", new object[] {
                        user,
                        password}, this.FnloginOperationCompleted, userState);
        }
        
        private void OnFnloginOperationCompleted(object arg) {
            if ((this.FnloginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnloginCompleted(this, new FnloginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnRegister", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnRegister_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnRegister(string empno, string regcode, string newpassword) {
            object[] results = this.Invoke("FnRegister", new object[] {
                        empno,
                        regcode,
                        newpassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegisterAsync(string empno, string regcode, string newpassword) {
            this.FnRegisterAsync(empno, regcode, newpassword, null);
        }
        
        /// <remarks/>
        public void FnRegisterAsync(string empno, string regcode, string newpassword, object userState) {
            if ((this.FnRegisterOperationCompleted == null)) {
                this.FnRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterOperationCompleted);
            }
            this.InvokeAsync("FnRegister", new object[] {
                        empno,
                        regcode,
                        newpassword}, this.FnRegisterOperationCompleted, userState);
        }
        
        private void OnFnRegisterOperationCompleted(object arg) {
            if ((this.FnRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterCompleted(this, new FnRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fninserreccode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fninserreccode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool Fninserreccode(string empno, string idnumber, string email) {
            object[] results = this.Invoke("Fninserreccode", new object[] {
                        empno,
                        idnumber,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FninserreccodeAsync(string empno, string idnumber, string email) {
            this.FninserreccodeAsync(empno, idnumber, email, null);
        }
        
        /// <remarks/>
        public void FninserreccodeAsync(string empno, string idnumber, string email, object userState) {
            if ((this.FninserreccodeOperationCompleted == null)) {
                this.FninserreccodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninserreccodeOperationCompleted);
            }
            this.InvokeAsync("Fninserreccode", new object[] {
                        empno,
                        idnumber,
                        email}, this.FninserreccodeOperationCompleted, userState);
        }
        
        private void OnFninserreccodeOperationCompleted(object arg) {
            if ((this.FninserreccodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninserreccodeCompleted(this, new FninserreccodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetPeriods", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetPeriods_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPeriods() {
            object[] results = this.Invoke("FnGetPeriods", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPeriodsAsync() {
            this.FnGetPeriodsAsync(null);
        }
        
        /// <remarks/>
        public void FnGetPeriodsAsync(object userState) {
            if ((this.FnGetPeriodsOperationCompleted == null)) {
                this.FnGetPeriodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPeriodsOperationCompleted);
            }
            this.InvokeAsync("FnGetPeriods", new object[0], this.FnGetPeriodsOperationCompleted, userState);
        }
        
        private void OnFnGetPeriodsOperationCompleted(object arg) {
            if ((this.FnGetPeriodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPeriodsCompleted(this, new FnGetPeriodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fnleaveinformation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fnleaveinformation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fnleaveinformation(string empNo) {
            object[] results = this.Invoke("Fnleaveinformation", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnleaveinformationAsync(string empNo) {
            this.FnleaveinformationAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnleaveinformationAsync(string empNo, object userState) {
            if ((this.FnleaveinformationOperationCompleted == null)) {
                this.FnleaveinformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnleaveinformationOperationCompleted);
            }
            this.InvokeAsync("Fnleaveinformation", new object[] {
                        empNo}, this.FnleaveinformationOperationCompleted, userState);
        }
        
        private void OnFnleaveinformationOperationCompleted(object arg) {
            if ((this.FnleaveinformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnleaveinformationCompleted(this, new FnleaveinformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLeaveList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLeaveList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLeaveList(string empNo) {
            object[] results = this.Invoke("FnLeaveList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLeaveListAsync(string empNo) {
            this.FnLeaveListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnLeaveListAsync(string empNo, object userState) {
            if ((this.FnLeaveListOperationCompleted == null)) {
                this.FnLeaveListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLeaveListOperationCompleted);
            }
            this.InvokeAsync("FnLeaveList", new object[] {
                        empNo}, this.FnLeaveListOperationCompleted, userState);
        }
        
        private void OnFnLeaveListOperationCompleted(object arg) {
            if ((this.FnLeaveListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLeaveListCompleted(this, new FnLeaveListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLeaveCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLeaveCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLeaveCard(string empNo, string leavecode) {
            object[] results = this.Invoke("FnLeaveCard", new object[] {
                        empNo,
                        leavecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLeaveCardAsync(string empNo, string leavecode) {
            this.FnLeaveCardAsync(empNo, leavecode, null);
        }
        
        /// <remarks/>
        public void FnLeaveCardAsync(string empNo, string leavecode, object userState) {
            if ((this.FnLeaveCardOperationCompleted == null)) {
                this.FnLeaveCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLeaveCardOperationCompleted);
            }
            this.InvokeAsync("FnLeaveCard", new object[] {
                        empNo,
                        leavecode}, this.FnLeaveCardOperationCompleted, userState);
        }
        
        private void OnFnLeaveCardOperationCompleted(object arg) {
            if ((this.FnLeaveCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLeaveCardCompleted(this, new FnLeaveCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetLeaveTypes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetLeaveTypes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetLeaveTypes() {
            object[] results = this.Invoke("FnGetLeaveTypes", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetLeaveTypesAsync() {
            this.FnGetLeaveTypesAsync(null);
        }
        
        /// <remarks/>
        public void FnGetLeaveTypesAsync(object userState) {
            if ((this.FnGetLeaveTypesOperationCompleted == null)) {
                this.FnGetLeaveTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetLeaveTypesOperationCompleted);
            }
            this.InvokeAsync("FnGetLeaveTypes", new object[0], this.FnGetLeaveTypesOperationCompleted, userState);
        }
        
        private void OnFnGetLeaveTypesOperationCompleted(object arg) {
            if ((this.FnGetLeaveTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetLeaveTypesCompleted(this, new FnGetLeaveTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnHrEmployees", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnHrEmployees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnHrEmployees() {
            object[] results = this.Invoke("FnHrEmployees", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnHrEmployeesAsync() {
            this.FnHrEmployeesAsync(null);
        }
        
        /// <remarks/>
        public void FnHrEmployeesAsync(object userState) {
            if ((this.FnHrEmployeesOperationCompleted == null)) {
                this.FnHrEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnHrEmployeesOperationCompleted);
            }
            this.InvokeAsync("FnHrEmployees", new object[0], this.FnHrEmployeesOperationCompleted, userState);
        }
        
        private void OnFnHrEmployeesOperationCompleted(object arg) {
            if ((this.FnHrEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnHrEmployeesCompleted(this, new FnHrEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnEditApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnEditApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnEditApplication(string employeeNo, string leaveType, int appliedDays, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, string reliever, string applicationNo, string pendingtasks) {
            this.Invoke("FnEditApplication", new object[] {
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        reliever,
                        applicationNo,
                        pendingtasks});
        }
        
        /// <remarks/>
        public void FnEditApplicationAsync(string employeeNo, string leaveType, int appliedDays, System.DateTime startDate, string reliever, string applicationNo, string pendingtasks) {
            this.FnEditApplicationAsync(employeeNo, leaveType, appliedDays, startDate, reliever, applicationNo, pendingtasks, null);
        }
        
        /// <remarks/>
        public void FnEditApplicationAsync(string employeeNo, string leaveType, int appliedDays, System.DateTime startDate, string reliever, string applicationNo, string pendingtasks, object userState) {
            if ((this.FnEditApplicationOperationCompleted == null)) {
                this.FnEditApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditApplicationOperationCompleted);
            }
            this.InvokeAsync("FnEditApplication", new object[] {
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        reliever,
                        applicationNo,
                        pendingtasks}, this.FnEditApplicationOperationCompleted, userState);
        }
        
        private void OnFnEditApplicationOperationCompleted(object arg) {
            if ((this.FnEditApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDelete", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDelete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDelete(string leaveCode) {
            this.Invoke("FnDelete", new object[] {
                        leaveCode});
        }
        
        /// <remarks/>
        public void FnDeleteAsync(string leaveCode) {
            this.FnDeleteAsync(leaveCode, null);
        }
        
        /// <remarks/>
        public void FnDeleteAsync(string leaveCode, object userState) {
            if ((this.FnDeleteOperationCompleted == null)) {
                this.FnDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteOperationCompleted);
            }
            this.InvokeAsync("FnDelete", new object[] {
                        leaveCode}, this.FnDeleteOperationCompleted, userState);
        }
        
        private void OnFnDeleteOperationCompleted(object arg) {
            if ((this.FnDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetleaveStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetleaveStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetleaveStatement(string employee_No, ref string bigText) {
            object[] results = this.Invoke("FnGetleaveStatement", new object[] {
                        employee_No,
                        bigText});
            bigText = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetleaveStatementAsync(string employee_No, string bigText) {
            this.FnGetleaveStatementAsync(employee_No, bigText, null);
        }
        
        /// <remarks/>
        public void FnGetleaveStatementAsync(string employee_No, string bigText, object userState) {
            if ((this.FnGetleaveStatementOperationCompleted == null)) {
                this.FnGetleaveStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetleaveStatementOperationCompleted);
            }
            this.InvokeAsync("FnGetleaveStatement", new object[] {
                        employee_No,
                        bigText}, this.FnGetleaveStatementOperationCompleted, userState);
        }
        
        private void OnFnGetleaveStatementOperationCompleted(object arg) {
            if ((this.FnGetleaveStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetleaveStatementCompleted(this, new FnGetleaveStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetP9Report", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetP9Report_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetP9Report(string employee_No, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime starting_date, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime ending_date, ref string bigText) {
            object[] results = this.Invoke("FnGetP9Report", new object[] {
                        employee_No,
                        starting_date,
                        ending_date,
                        bigText});
            bigText = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetP9ReportAsync(string employee_No, System.DateTime starting_date, System.DateTime ending_date, string bigText) {
            this.FnGetP9ReportAsync(employee_No, starting_date, ending_date, bigText, null);
        }
        
        /// <remarks/>
        public void FnGetP9ReportAsync(string employee_No, System.DateTime starting_date, System.DateTime ending_date, string bigText, object userState) {
            if ((this.FnGetP9ReportOperationCompleted == null)) {
                this.FnGetP9ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetP9ReportOperationCompleted);
            }
            this.InvokeAsync("FnGetP9Report", new object[] {
                        employee_No,
                        starting_date,
                        ending_date,
                        bigText}, this.FnGetP9ReportOperationCompleted, userState);
        }
        
        private void OnFnGetP9ReportOperationCompleted(object arg) {
            if ((this.FnGetP9ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetP9ReportCompleted(this, new FnGetP9ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLeaveDelete", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLeaveDelete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLeaveDelete(string empNo, string leaveNo) {
            object[] results = this.Invoke("FnLeaveDelete", new object[] {
                        empNo,
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLeaveDeleteAsync(string empNo, string leaveNo) {
            this.FnLeaveDeleteAsync(empNo, leaveNo, null);
        }
        
        /// <remarks/>
        public void FnLeaveDeleteAsync(string empNo, string leaveNo, object userState) {
            if ((this.FnLeaveDeleteOperationCompleted == null)) {
                this.FnLeaveDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLeaveDeleteOperationCompleted);
            }
            this.InvokeAsync("FnLeaveDelete", new object[] {
                        empNo,
                        leaveNo}, this.FnLeaveDeleteOperationCompleted, userState);
        }
        
        private void OnFnLeaveDeleteOperationCompleted(object arg) {
            if ((this.FnLeaveDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLeaveDeleteCompleted(this, new FnLeaveDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdateImprestCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdateImprestCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateImprestCard(string imprestNo, string departmentcode, string directoratecode, string purpose, string responsibilitycenter, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnUpdateImprestCard", new object[] {
                        imprestNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        responsibilitycenter,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateImprestCardAsync(string imprestNo, string departmentcode, string directoratecode, string purpose, string responsibilitycenter, System.DateTime startdate, System.DateTime enddate) {
            this.FnUpdateImprestCardAsync(imprestNo, departmentcode, directoratecode, purpose, responsibilitycenter, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnUpdateImprestCardAsync(string imprestNo, string departmentcode, string directoratecode, string purpose, string responsibilitycenter, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnUpdateImprestCardOperationCompleted == null)) {
                this.FnUpdateImprestCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateImprestCardOperationCompleted);
            }
            this.InvokeAsync("FnUpdateImprestCard", new object[] {
                        imprestNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        responsibilitycenter,
                        startdate,
                        enddate}, this.FnUpdateImprestCardOperationCompleted, userState);
        }
        
        private void OnFnUpdateImprestCardOperationCompleted(object arg) {
            if ((this.FnUpdateImprestCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateImprestCardCompleted(this, new FnUpdateImprestCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnImprestCard(string empNo, string departmentcode, string directoratecode, string purpose, string responsibilitycenter, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnImprestCard", new object[] {
                        empNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        responsibilitycenter,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnImprestCardAsync(string empNo, string departmentcode, string directoratecode, string purpose, string responsibilitycenter, System.DateTime startdate, System.DateTime enddate) {
            this.FnImprestCardAsync(empNo, departmentcode, directoratecode, purpose, responsibilitycenter, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnImprestCardAsync(string empNo, string departmentcode, string directoratecode, string purpose, string responsibilitycenter, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnImprestCardOperationCompleted == null)) {
                this.FnImprestCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestCardOperationCompleted);
            }
            this.InvokeAsync("FnImprestCard", new object[] {
                        empNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        responsibilitycenter,
                        startdate,
                        enddate}, this.FnImprestCardOperationCompleted, userState);
        }
        
        private void OnFnImprestCardOperationCompleted(object arg) {
            if ((this.FnImprestCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestCardCompleted(this, new FnImprestCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestCardEdit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestCardEdit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnImprestCardEdit(string imprestNo) {
            object[] results = this.Invoke("FnImprestCardEdit", new object[] {
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnImprestCardEditAsync(string imprestNo) {
            this.FnImprestCardEditAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void FnImprestCardEditAsync(string imprestNo, object userState) {
            if ((this.FnImprestCardEditOperationCompleted == null)) {
                this.FnImprestCardEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestCardEditOperationCompleted);
            }
            this.InvokeAsync("FnImprestCardEdit", new object[] {
                        imprestNo}, this.FnImprestCardEditOperationCompleted, userState);
        }
        
        private void OnFnImprestCardEditOperationCompleted(object arg) {
            if ((this.FnImprestCardEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestCardEditCompleted(this, new FnImprestCardEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPettyCashCardEdit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPettyCashCardEdit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPettyCashCardEdit(string pettyCashNo) {
            object[] results = this.Invoke("FnPettyCashCardEdit", new object[] {
                        pettyCashNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPettyCashCardEditAsync(string pettyCashNo) {
            this.FnPettyCashCardEditAsync(pettyCashNo, null);
        }
        
        /// <remarks/>
        public void FnPettyCashCardEditAsync(string pettyCashNo, object userState) {
            if ((this.FnPettyCashCardEditOperationCompleted == null)) {
                this.FnPettyCashCardEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPettyCashCardEditOperationCompleted);
            }
            this.InvokeAsync("FnPettyCashCardEdit", new object[] {
                        pettyCashNo}, this.FnPettyCashCardEditOperationCompleted, userState);
        }
        
        private void OnFnPettyCashCardEditOperationCompleted(object arg) {
            if ((this.FnPettyCashCardEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPettyCashCardEditCompleted(this, new FnPettyCashCardEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPettyCashCardDelete", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPettyCashCardDelete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnPettyCashCardDelete(string pettyCashNo) {
            this.Invoke("FnPettyCashCardDelete", new object[] {
                        pettyCashNo});
        }
        
        /// <remarks/>
        public void FnPettyCashCardDeleteAsync(string pettyCashNo) {
            this.FnPettyCashCardDeleteAsync(pettyCashNo, null);
        }
        
        /// <remarks/>
        public void FnPettyCashCardDeleteAsync(string pettyCashNo, object userState) {
            if ((this.FnPettyCashCardDeleteOperationCompleted == null)) {
                this.FnPettyCashCardDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPettyCashCardDeleteOperationCompleted);
            }
            this.InvokeAsync("FnPettyCashCardDelete", new object[] {
                        pettyCashNo}, this.FnPettyCashCardDeleteOperationCompleted, userState);
        }
        
        private void OnFnPettyCashCardDeleteOperationCompleted(object arg) {
            if ((this.FnPettyCashCardDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPettyCashCardDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPettyCashCardDoUpdate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPettyCashCardDoUpdate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPettyCashCardDoUpdate(string pettyCashNo, string departmentcode, string directoratecode, string purpose, decimal amountRequested, string bank) {
            object[] results = this.Invoke("FnPettyCashCardDoUpdate", new object[] {
                        pettyCashNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        amountRequested,
                        bank});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPettyCashCardDoUpdateAsync(string pettyCashNo, string departmentcode, string directoratecode, string purpose, decimal amountRequested, string bank) {
            this.FnPettyCashCardDoUpdateAsync(pettyCashNo, departmentcode, directoratecode, purpose, amountRequested, bank, null);
        }
        
        /// <remarks/>
        public void FnPettyCashCardDoUpdateAsync(string pettyCashNo, string departmentcode, string directoratecode, string purpose, decimal amountRequested, string bank, object userState) {
            if ((this.FnPettyCashCardDoUpdateOperationCompleted == null)) {
                this.FnPettyCashCardDoUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPettyCashCardDoUpdateOperationCompleted);
            }
            this.InvokeAsync("FnPettyCashCardDoUpdate", new object[] {
                        pettyCashNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        amountRequested,
                        bank}, this.FnPettyCashCardDoUpdateOperationCompleted, userState);
        }
        
        private void OnFnPettyCashCardDoUpdateOperationCompleted(object arg) {
            if ((this.FnPettyCashCardDoUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPettyCashCardDoUpdateCompleted(this, new FnPettyCashCardDoUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPettyCashCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPettyCashCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPettyCashCard(string empNo, string departmentcode, string directoratecode, string purpose, decimal amountRequested, string bank) {
            object[] results = this.Invoke("FnPettyCashCard", new object[] {
                        empNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        amountRequested,
                        bank});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPettyCashCardAsync(string empNo, string departmentcode, string directoratecode, string purpose, decimal amountRequested, string bank) {
            this.FnPettyCashCardAsync(empNo, departmentcode, directoratecode, purpose, amountRequested, bank, null);
        }
        
        /// <remarks/>
        public void FnPettyCashCardAsync(string empNo, string departmentcode, string directoratecode, string purpose, decimal amountRequested, string bank, object userState) {
            if ((this.FnPettyCashCardOperationCompleted == null)) {
                this.FnPettyCashCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPettyCashCardOperationCompleted);
            }
            this.InvokeAsync("FnPettyCashCard", new object[] {
                        empNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        amountRequested,
                        bank}, this.FnPettyCashCardOperationCompleted, userState);
        }
        
        private void OnFnPettyCashCardOperationCompleted(object arg) {
            if ((this.FnPettyCashCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPettyCashCardCompleted(this, new FnPettyCashCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPettyCashList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPettyCashList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPettyCashList(string empNo) {
            object[] results = this.Invoke("FnPettyCashList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPettyCashListAsync(string empNo) {
            this.FnPettyCashListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnPettyCashListAsync(string empNo, object userState) {
            if ((this.FnPettyCashListOperationCompleted == null)) {
                this.FnPettyCashListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPettyCashListOperationCompleted);
            }
            this.InvokeAsync("FnPettyCashList", new object[] {
                        empNo}, this.FnPettyCashListOperationCompleted, userState);
        }
        
        private void OnFnPettyCashListOperationCompleted(object arg) {
            if ((this.FnPettyCashListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPettyCashListCompleted(this, new FnPettyCashListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPettyCashBank", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPettyCashBank_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPettyCashBank() {
            object[] results = this.Invoke("FnPettyCashBank", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPettyCashBankAsync() {
            this.FnPettyCashBankAsync(null);
        }
        
        /// <remarks/>
        public void FnPettyCashBankAsync(object userState) {
            if ((this.FnPettyCashBankOperationCompleted == null)) {
                this.FnPettyCashBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPettyCashBankOperationCompleted);
            }
            this.InvokeAsync("FnPettyCashBank", new object[0], this.FnPettyCashBankOperationCompleted, userState);
        }
        
        private void OnFnPettyCashBankOperationCompleted(object arg) {
            if ((this.FnPettyCashBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPettyCashBankCompleted(this, new FnPettyCashBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPettyCashApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPettyCashApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnPettyCashApproval(string imprestNo, bool approval) {
            this.Invoke("FnPettyCashApproval", new object[] {
                        imprestNo,
                        approval});
        }
        
        /// <remarks/>
        public void FnPettyCashApprovalAsync(string imprestNo, bool approval) {
            this.FnPettyCashApprovalAsync(imprestNo, approval, null);
        }
        
        /// <remarks/>
        public void FnPettyCashApprovalAsync(string imprestNo, bool approval, object userState) {
            if ((this.FnPettyCashApprovalOperationCompleted == null)) {
                this.FnPettyCashApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPettyCashApprovalOperationCompleted);
            }
            this.InvokeAsync("FnPettyCashApproval", new object[] {
                        imprestNo,
                        approval}, this.FnPettyCashApprovalOperationCompleted, userState);
        }
        
        private void OnFnPettyCashApprovalOperationCompleted(object arg) {
            if ((this.FnPettyCashApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPettyCashApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPaymentTypes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPaymentTypes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPaymentTypes(int type) {
            object[] results = this.Invoke("FnPaymentTypes", new object[] {
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPaymentTypesAsync(int type) {
            this.FnPaymentTypesAsync(type, null);
        }
        
        /// <remarks/>
        public void FnPaymentTypesAsync(int type, object userState) {
            if ((this.FnPaymentTypesOperationCompleted == null)) {
                this.FnPaymentTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPaymentTypesOperationCompleted);
            }
            this.InvokeAsync("FnPaymentTypes", new object[] {
                        type}, this.FnPaymentTypesOperationCompleted, userState);
        }
        
        private void OnFnPaymentTypesOperationCompleted(object arg) {
            if ((this.FnPaymentTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPaymentTypesCompleted(this, new FnPaymentTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestLineDelete", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestLineDelete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnImprestLineDelete(string imprestNo, int lineNo) {
            object[] results = this.Invoke("FnImprestLineDelete", new object[] {
                        imprestNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnImprestLineDeleteAsync(string imprestNo, int lineNo) {
            this.FnImprestLineDeleteAsync(imprestNo, lineNo, null);
        }
        
        /// <remarks/>
        public void FnImprestLineDeleteAsync(string imprestNo, int lineNo, object userState) {
            if ((this.FnImprestLineDeleteOperationCompleted == null)) {
                this.FnImprestLineDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestLineDeleteOperationCompleted);
            }
            this.InvokeAsync("FnImprestLineDelete", new object[] {
                        imprestNo,
                        lineNo}, this.FnImprestLineDeleteOperationCompleted, userState);
        }
        
        private void OnFnImprestLineDeleteOperationCompleted(object arg) {
            if ((this.FnImprestLineDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestLineDeleteCompleted(this, new FnImprestLineDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnImprestLine(string imprestNo) {
            object[] results = this.Invoke("FnImprestLine", new object[] {
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnImprestLineAsync(string imprestNo) {
            this.FnImprestLineAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void FnImprestLineAsync(string imprestNo, object userState) {
            if ((this.FnImprestLineOperationCompleted == null)) {
                this.FnImprestLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestLineOperationCompleted);
            }
            this.InvokeAsync("FnImprestLine", new object[] {
                        imprestNo}, this.FnImprestLineOperationCompleted, userState);
        }
        
        private void OnFnImprestLineOperationCompleted(object arg) {
            if ((this.FnImprestLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestLineCompleted(this, new FnImprestLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestLineCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestLineCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnImprestLineCard(string imprestNo, int lineNo) {
            object[] results = this.Invoke("FnImprestLineCard", new object[] {
                        imprestNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnImprestLineCardAsync(string imprestNo, int lineNo) {
            this.FnImprestLineCardAsync(imprestNo, lineNo, null);
        }
        
        /// <remarks/>
        public void FnImprestLineCardAsync(string imprestNo, int lineNo, object userState) {
            if ((this.FnImprestLineCardOperationCompleted == null)) {
                this.FnImprestLineCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestLineCardOperationCompleted);
            }
            this.InvokeAsync("FnImprestLineCard", new object[] {
                        imprestNo,
                        lineNo}, this.FnImprestLineCardOperationCompleted, userState);
        }
        
        private void OnFnImprestLineCardOperationCompleted(object arg) {
            if ((this.FnImprestLineCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestLineCardCompleted(this, new FnImprestLineCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestLineCardEdit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestLineCardEdit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnImprestLineCardEdit(string imprestNo, string type, decimal amount) {
            object[] results = this.Invoke("FnImprestLineCardEdit", new object[] {
                        imprestNo,
                        type,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnImprestLineCardEditAsync(string imprestNo, string type, decimal amount) {
            this.FnImprestLineCardEditAsync(imprestNo, type, amount, null);
        }
        
        /// <remarks/>
        public void FnImprestLineCardEditAsync(string imprestNo, string type, decimal amount, object userState) {
            if ((this.FnImprestLineCardEditOperationCompleted == null)) {
                this.FnImprestLineCardEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestLineCardEditOperationCompleted);
            }
            this.InvokeAsync("FnImprestLineCardEdit", new object[] {
                        imprestNo,
                        type,
                        amount}, this.FnImprestLineCardEditOperationCompleted, userState);
        }
        
        private void OnFnImprestLineCardEditOperationCompleted(object arg) {
            if ((this.FnImprestLineCardEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestLineCardEditCompleted(this, new FnImprestLineCardEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:ApprovalList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="ApprovalList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApprovalList(string empNo) {
            object[] results = this.Invoke("ApprovalList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApprovalListAsync(string empNo) {
            this.ApprovalListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void ApprovalListAsync(string empNo, object userState) {
            if ((this.ApprovalListOperationCompleted == null)) {
                this.ApprovalListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprovalListOperationCompleted);
            }
            this.InvokeAsync("ApprovalList", new object[] {
                        empNo}, this.ApprovalListOperationCompleted, userState);
        }
        
        private void OnApprovalListOperationCompleted(object arg) {
            if ((this.ApprovalListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApprovalListCompleted(this, new ApprovalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnClaimList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnClaimList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnClaimList(string empNo) {
            object[] results = this.Invoke("FnClaimList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnClaimListAsync(string empNo) {
            this.FnClaimListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnClaimListAsync(string empNo, object userState) {
            if ((this.FnClaimListOperationCompleted == null)) {
                this.FnClaimListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnClaimListOperationCompleted);
            }
            this.InvokeAsync("FnClaimList", new object[] {
                        empNo}, this.FnClaimListOperationCompleted, userState);
        }
        
        private void OnFnClaimListOperationCompleted(object arg) {
            if ((this.FnClaimListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnClaimListCompleted(this, new FnClaimListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnClaimCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnClaimCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnClaimCard(string empNo, string departmentcode, string directoratecode, string purpose, string responsibilitycenter, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnClaimCard", new object[] {
                        empNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        responsibilitycenter,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnClaimCardAsync(string empNo, string departmentcode, string directoratecode, string purpose, string responsibilitycenter, System.DateTime startdate, System.DateTime enddate) {
            this.FnClaimCardAsync(empNo, departmentcode, directoratecode, purpose, responsibilitycenter, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnClaimCardAsync(string empNo, string departmentcode, string directoratecode, string purpose, string responsibilitycenter, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnClaimCardOperationCompleted == null)) {
                this.FnClaimCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnClaimCardOperationCompleted);
            }
            this.InvokeAsync("FnClaimCard", new object[] {
                        empNo,
                        departmentcode,
                        directoratecode,
                        purpose,
                        responsibilitycenter,
                        startdate,
                        enddate}, this.FnClaimCardOperationCompleted, userState);
        }
        
        private void OnFnClaimCardOperationCompleted(object arg) {
            if ((this.FnClaimCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnClaimCardCompleted(this, new FnClaimCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnClaimCardEdit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnClaimCardEdit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnClaimCardEdit(string imprestNo) {
            object[] results = this.Invoke("FnClaimCardEdit", new object[] {
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnClaimCardEditAsync(string imprestNo) {
            this.FnClaimCardEditAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void FnClaimCardEditAsync(string imprestNo, object userState) {
            if ((this.FnClaimCardEditOperationCompleted == null)) {
                this.FnClaimCardEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnClaimCardEditOperationCompleted);
            }
            this.InvokeAsync("FnClaimCardEdit", new object[] {
                        imprestNo}, this.FnClaimCardEditOperationCompleted, userState);
        }
        
        private void OnFnClaimCardEditOperationCompleted(object arg) {
            if ((this.FnClaimCardEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnClaimCardEditCompleted(this, new FnClaimCardEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnClaimLineDelete", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnClaimLineDelete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnClaimLineDelete(string imprestNo, int lineNo) {
            object[] results = this.Invoke("FnClaimLineDelete", new object[] {
                        imprestNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnClaimLineDeleteAsync(string imprestNo, int lineNo) {
            this.FnClaimLineDeleteAsync(imprestNo, lineNo, null);
        }
        
        /// <remarks/>
        public void FnClaimLineDeleteAsync(string imprestNo, int lineNo, object userState) {
            if ((this.FnClaimLineDeleteOperationCompleted == null)) {
                this.FnClaimLineDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnClaimLineDeleteOperationCompleted);
            }
            this.InvokeAsync("FnClaimLineDelete", new object[] {
                        imprestNo,
                        lineNo}, this.FnClaimLineDeleteOperationCompleted, userState);
        }
        
        private void OnFnClaimLineDeleteOperationCompleted(object arg) {
            if ((this.FnClaimLineDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnClaimLineDeleteCompleted(this, new FnClaimLineDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnClaimLine(string imprestNo) {
            object[] results = this.Invoke("FnClaimLine", new object[] {
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnClaimLineAsync(string imprestNo) {
            this.FnClaimLineAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void FnClaimLineAsync(string imprestNo, object userState) {
            if ((this.FnClaimLineOperationCompleted == null)) {
                this.FnClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnClaimLineOperationCompleted);
            }
            this.InvokeAsync("FnClaimLine", new object[] {
                        imprestNo}, this.FnClaimLineOperationCompleted, userState);
        }
        
        private void OnFnClaimLineOperationCompleted(object arg) {
            if ((this.FnClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnClaimLineCompleted(this, new FnClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnClaimLineCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnClaimLineCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnClaimLineCard(string imprestNo, int lineNo) {
            object[] results = this.Invoke("FnClaimLineCard", new object[] {
                        imprestNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnClaimLineCardAsync(string imprestNo, int lineNo) {
            this.FnClaimLineCardAsync(imprestNo, lineNo, null);
        }
        
        /// <remarks/>
        public void FnClaimLineCardAsync(string imprestNo, int lineNo, object userState) {
            if ((this.FnClaimLineCardOperationCompleted == null)) {
                this.FnClaimLineCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnClaimLineCardOperationCompleted);
            }
            this.InvokeAsync("FnClaimLineCard", new object[] {
                        imprestNo,
                        lineNo}, this.FnClaimLineCardOperationCompleted, userState);
        }
        
        private void OnFnClaimLineCardOperationCompleted(object arg) {
            if ((this.FnClaimLineCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnClaimLineCardCompleted(this, new FnClaimLineCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnClaimLineCardEdit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnClaimLineCardEdit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnClaimLineCardEdit(string imprestNo, string type, decimal amount) {
            object[] results = this.Invoke("FnClaimLineCardEdit", new object[] {
                        imprestNo,
                        type,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnClaimLineCardEditAsync(string imprestNo, string type, decimal amount) {
            this.FnClaimLineCardEditAsync(imprestNo, type, amount, null);
        }
        
        /// <remarks/>
        public void FnClaimLineCardEditAsync(string imprestNo, string type, decimal amount, object userState) {
            if ((this.FnClaimLineCardEditOperationCompleted == null)) {
                this.FnClaimLineCardEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnClaimLineCardEditOperationCompleted);
            }
            this.InvokeAsync("FnClaimLineCardEdit", new object[] {
                        imprestNo,
                        type,
                        amount}, this.FnClaimLineCardEditOperationCompleted, userState);
        }
        
        private void OnFnClaimLineCardEditOperationCompleted(object arg) {
            if ((this.FnClaimLineCardEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnClaimLineCardEditCompleted(this, new FnClaimLineCardEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDepartment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDepartment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDepartment() {
            object[] results = this.Invoke("FnDepartment", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDepartmentAsync() {
            this.FnDepartmentAsync(null);
        }
        
        /// <remarks/>
        public void FnDepartmentAsync(object userState) {
            if ((this.FnDepartmentOperationCompleted == null)) {
                this.FnDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDepartmentOperationCompleted);
            }
            this.InvokeAsync("FnDepartment", new object[0], this.FnDepartmentOperationCompleted, userState);
        }
        
        private void OnFnDepartmentOperationCompleted(object arg) {
            if ((this.FnDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDepartmentCompleted(this, new FnDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDepartmentValue", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDepartmentValue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDepartmentValue() {
            object[] results = this.Invoke("FnDepartmentValue", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDepartmentValueAsync() {
            this.FnDepartmentValueAsync(null);
        }
        
        /// <remarks/>
        public void FnDepartmentValueAsync(object userState) {
            if ((this.FnDepartmentValueOperationCompleted == null)) {
                this.FnDepartmentValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDepartmentValueOperationCompleted);
            }
            this.InvokeAsync("FnDepartmentValue", new object[0], this.FnDepartmentValueOperationCompleted, userState);
        }
        
        private void OnFnDepartmentValueOperationCompleted(object arg) {
            if ((this.FnDepartmentValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDepartmentValueCompleted(this, new FnDepartmentValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnRolecenter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnRolecenter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRolecenter() {
            object[] results = this.Invoke("FnRolecenter", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRolecenterAsync() {
            this.FnRolecenterAsync(null);
        }
        
        /// <remarks/>
        public void FnRolecenterAsync(object userState) {
            if ((this.FnRolecenterOperationCompleted == null)) {
                this.FnRolecenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRolecenterOperationCompleted);
            }
            this.InvokeAsync("FnRolecenter", new object[0], this.FnRolecenterOperationCompleted, userState);
        }
        
        private void OnFnRolecenterOperationCompleted(object arg) {
            if ((this.FnRolecenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRolecenterCompleted(this, new FnRolecenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnImprestList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnImprestList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnImprestList(string empNo) {
            object[] results = this.Invoke("FnImprestList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnImprestListAsync(string empNo) {
            this.FnImprestListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnImprestListAsync(string empNo, object userState) {
            if ((this.FnImprestListOperationCompleted == null)) {
                this.FnImprestListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnImprestListOperationCompleted);
            }
            this.InvokeAsync("FnImprestList", new object[] {
                        empNo}, this.FnImprestListOperationCompleted, userState);
        }
        
        private void OnFnImprestListOperationCompleted(object arg) {
            if ((this.FnImprestListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnImprestListCompleted(this, new FnImprestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLeaveCardEdit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLeaveCardEdit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLeaveCardEdit(string empNo, string leavecode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, string resposnsibilitycenter, string leaveType, decimal dayApplied, string releavecode) {
            object[] results = this.Invoke("FnLeaveCardEdit", new object[] {
                        empNo,
                        leavecode,
                        startdate,
                        resposnsibilitycenter,
                        leaveType,
                        dayApplied,
                        releavecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLeaveCardEditAsync(string empNo, string leavecode, System.DateTime startdate, string resposnsibilitycenter, string leaveType, decimal dayApplied, string releavecode) {
            this.FnLeaveCardEditAsync(empNo, leavecode, startdate, resposnsibilitycenter, leaveType, dayApplied, releavecode, null);
        }
        
        /// <remarks/>
        public void FnLeaveCardEditAsync(string empNo, string leavecode, System.DateTime startdate, string resposnsibilitycenter, string leaveType, decimal dayApplied, string releavecode, object userState) {
            if ((this.FnLeaveCardEditOperationCompleted == null)) {
                this.FnLeaveCardEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLeaveCardEditOperationCompleted);
            }
            this.InvokeAsync("FnLeaveCardEdit", new object[] {
                        empNo,
                        leavecode,
                        startdate,
                        resposnsibilitycenter,
                        leaveType,
                        dayApplied,
                        releavecode}, this.FnLeaveCardEditOperationCompleted, userState);
        }
        
        private void OnFnLeaveCardEditOperationCompleted(object arg) {
            if ((this.FnLeaveCardEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLeaveCardEditCompleted(this, new FnLeaveCardEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnMissionProportsalsList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnMissionProportsalsList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnMissionProportsalsList(string empNo) {
            object[] results = this.Invoke("FnMissionProportsalsList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnMissionProportsalsListAsync(string empNo) {
            this.FnMissionProportsalsListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnMissionProportsalsListAsync(string empNo, object userState) {
            if ((this.FnMissionProportsalsListOperationCompleted == null)) {
                this.FnMissionProportsalsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnMissionProportsalsListOperationCompleted);
            }
            this.InvokeAsync("FnMissionProportsalsList", new object[] {
                        empNo}, this.FnMissionProportsalsListOperationCompleted, userState);
        }
        
        private void OnFnMissionProportsalsListOperationCompleted(object arg) {
            if ((this.FnMissionProportsalsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnMissionProportsalsListCompleted(this, new FnMissionProportsalsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetProfilePicture", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetProfilePicture_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetProfilePicture(string empno, ref string pictureText) {
            object[] results = this.Invoke("FnGetProfilePicture", new object[] {
                        empno,
                        pictureText});
            pictureText = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProfilePictureAsync(string empno, string pictureText) {
            this.FnGetProfilePictureAsync(empno, pictureText, null);
        }
        
        /// <remarks/>
        public void FnGetProfilePictureAsync(string empno, string pictureText, object userState) {
            if ((this.FnGetProfilePictureOperationCompleted == null)) {
                this.FnGetProfilePictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProfilePictureOperationCompleted);
            }
            this.InvokeAsync("FnGetProfilePicture", new object[] {
                        empno,
                        pictureText}, this.FnGetProfilePictureOperationCompleted, userState);
        }
        
        private void OnFnGetProfilePictureOperationCompleted(object arg) {
            if ((this.FnGetProfilePictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProfilePictureCompleted(this, new FnGetProfilePictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetStandardText", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetStandardText_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetStandardText() {
            object[] results = this.Invoke("FnGetStandardText", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetStandardTextAsync() {
            this.FnGetStandardTextAsync(null);
        }
        
        /// <remarks/>
        public void FnGetStandardTextAsync(object userState) {
            if ((this.FnGetStandardTextOperationCompleted == null)) {
                this.FnGetStandardTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetStandardTextOperationCompleted);
            }
            this.InvokeAsync("FnGetStandardText", new object[0], this.FnGetStandardTextOperationCompleted, userState);
        }
        
        private void OnFnGetStandardTextOperationCompleted(object arg) {
            if ((this.FnGetStandardTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetStandardTextCompleted(this, new FnGetStandardTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetContryregions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetContryregions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetContryregions() {
            object[] results = this.Invoke("FnGetContryregions", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetContryregionsAsync() {
            this.FnGetContryregionsAsync(null);
        }
        
        /// <remarks/>
        public void FnGetContryregionsAsync(object userState) {
            if ((this.FnGetContryregionsOperationCompleted == null)) {
                this.FnGetContryregionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetContryregionsOperationCompleted);
            }
            this.InvokeAsync("FnGetContryregions", new object[0], this.FnGetContryregionsOperationCompleted, userState);
        }
        
        private void OnFnGetContryregionsOperationCompleted(object arg) {
            if ((this.FnGetContryregionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetContryregionsCompleted(this, new FnGetContryregionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertMissionProporsal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertMissionProporsal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertMissionProporsal(
                    string stratrgicFocusarea, 
                    string subpillar, 
                    string projecttitle, 
                    string country, 
                    string county, 
                    string datesofActivities, 
                    string missionteam, 
                    string invitedmebers, 
                    string fundcode, 
                    string programcode, 
                    string departmentdimension, 
                    string budgetdimesion, 
                    string budgetdescription, 
                    string background, 
                    string strategicfocus, 
                    string outcome, 
                    string empno) {
            object[] results = this.Invoke("FnInsertMissionProporsal", new object[] {
                        stratrgicFocusarea,
                        subpillar,
                        projecttitle,
                        country,
                        county,
                        datesofActivities,
                        missionteam,
                        invitedmebers,
                        fundcode,
                        programcode,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        background,
                        strategicfocus,
                        outcome,
                        empno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertMissionProporsalAsync(
                    string stratrgicFocusarea, 
                    string subpillar, 
                    string projecttitle, 
                    string country, 
                    string county, 
                    string datesofActivities, 
                    string missionteam, 
                    string invitedmebers, 
                    string fundcode, 
                    string programcode, 
                    string departmentdimension, 
                    string budgetdimesion, 
                    string budgetdescription, 
                    string background, 
                    string strategicfocus, 
                    string outcome, 
                    string empno) {
            this.FnInsertMissionProporsalAsync(stratrgicFocusarea, subpillar, projecttitle, country, county, datesofActivities, missionteam, invitedmebers, fundcode, programcode, departmentdimension, budgetdimesion, budgetdescription, background, strategicfocus, outcome, empno, null);
        }
        
        /// <remarks/>
        public void FnInsertMissionProporsalAsync(
                    string stratrgicFocusarea, 
                    string subpillar, 
                    string projecttitle, 
                    string country, 
                    string county, 
                    string datesofActivities, 
                    string missionteam, 
                    string invitedmebers, 
                    string fundcode, 
                    string programcode, 
                    string departmentdimension, 
                    string budgetdimesion, 
                    string budgetdescription, 
                    string background, 
                    string strategicfocus, 
                    string outcome, 
                    string empno, 
                    object userState) {
            if ((this.FnInsertMissionProporsalOperationCompleted == null)) {
                this.FnInsertMissionProporsalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertMissionProporsalOperationCompleted);
            }
            this.InvokeAsync("FnInsertMissionProporsal", new object[] {
                        stratrgicFocusarea,
                        subpillar,
                        projecttitle,
                        country,
                        county,
                        datesofActivities,
                        missionteam,
                        invitedmebers,
                        fundcode,
                        programcode,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        background,
                        strategicfocus,
                        outcome,
                        empno}, this.FnInsertMissionProporsalOperationCompleted, userState);
        }
        
        private void OnFnInsertMissionProporsalOperationCompleted(object arg) {
            if ((this.FnInsertMissionProporsalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertMissionProporsalCompleted(this, new FnInsertMissionProporsalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdateMissionProporsal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdateMissionProporsal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateMissionProporsal(
                    string stratrgicFocusarea, 
                    string subpillar, 
                    string projecttitle, 
                    string country, 
                    string county, 
                    string datesofActivities, 
                    string missionteam, 
                    string invitedmebers, 
                    string fundcode, 
                    string programcode, 
                    string no, 
                    string departmentdimension, 
                    string budgetdimesion, 
                    string budgetdescription, 
                    string background, 
                    string strategicfocus, 
                    string outcome) {
            object[] results = this.Invoke("FnUpdateMissionProporsal", new object[] {
                        stratrgicFocusarea,
                        subpillar,
                        projecttitle,
                        country,
                        county,
                        datesofActivities,
                        missionteam,
                        invitedmebers,
                        fundcode,
                        programcode,
                        no,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        background,
                        strategicfocus,
                        outcome});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateMissionProporsalAsync(
                    string stratrgicFocusarea, 
                    string subpillar, 
                    string projecttitle, 
                    string country, 
                    string county, 
                    string datesofActivities, 
                    string missionteam, 
                    string invitedmebers, 
                    string fundcode, 
                    string programcode, 
                    string no, 
                    string departmentdimension, 
                    string budgetdimesion, 
                    string budgetdescription, 
                    string background, 
                    string strategicfocus, 
                    string outcome) {
            this.FnUpdateMissionProporsalAsync(stratrgicFocusarea, subpillar, projecttitle, country, county, datesofActivities, missionteam, invitedmebers, fundcode, programcode, no, departmentdimension, budgetdimesion, budgetdescription, background, strategicfocus, outcome, null);
        }
        
        /// <remarks/>
        public void FnUpdateMissionProporsalAsync(
                    string stratrgicFocusarea, 
                    string subpillar, 
                    string projecttitle, 
                    string country, 
                    string county, 
                    string datesofActivities, 
                    string missionteam, 
                    string invitedmebers, 
                    string fundcode, 
                    string programcode, 
                    string no, 
                    string departmentdimension, 
                    string budgetdimesion, 
                    string budgetdescription, 
                    string background, 
                    string strategicfocus, 
                    string outcome, 
                    object userState) {
            if ((this.FnUpdateMissionProporsalOperationCompleted == null)) {
                this.FnUpdateMissionProporsalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateMissionProporsalOperationCompleted);
            }
            this.InvokeAsync("FnUpdateMissionProporsal", new object[] {
                        stratrgicFocusarea,
                        subpillar,
                        projecttitle,
                        country,
                        county,
                        datesofActivities,
                        missionteam,
                        invitedmebers,
                        fundcode,
                        programcode,
                        no,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        background,
                        strategicfocus,
                        outcome}, this.FnUpdateMissionProporsalOperationCompleted, userState);
        }
        
        private void OnFnUpdateMissionProporsalOperationCompleted(object arg) {
            if ((this.FnUpdateMissionProporsalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateMissionProporsalCompleted(this, new FnUpdateMissionProporsalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPurchaseRequisitionList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPurchaseRequisitionList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPurchaseRequisitionList(string empNo) {
            object[] results = this.Invoke("FnPurchaseRequisitionList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPurchaseRequisitionListAsync(string empNo) {
            this.FnPurchaseRequisitionListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnPurchaseRequisitionListAsync(string empNo, object userState) {
            if ((this.FnPurchaseRequisitionListOperationCompleted == null)) {
                this.FnPurchaseRequisitionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPurchaseRequisitionListOperationCompleted);
            }
            this.InvokeAsync("FnPurchaseRequisitionList", new object[] {
                        empNo}, this.FnPurchaseRequisitionListOperationCompleted, userState);
        }
        
        private void OnFnPurchaseRequisitionListOperationCompleted(object arg) {
            if ((this.FnPurchaseRequisitionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPurchaseRequisitionListCompleted(this, new FnPurchaseRequisitionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertPurchaseRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertPurchaseRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInsertPurchaseRequest(string fundcode, string programcode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime daterequried, string missionno, string departmentdimension, string budgetdimesion, string budgetdescription, string empno) {
            this.Invoke("FnInsertPurchaseRequest", new object[] {
                        fundcode,
                        programcode,
                        daterequried,
                        missionno,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        empno});
        }
        
        /// <remarks/>
        public void FnInsertPurchaseRequestAsync(string fundcode, string programcode, System.DateTime daterequried, string missionno, string departmentdimension, string budgetdimesion, string budgetdescription, string empno) {
            this.FnInsertPurchaseRequestAsync(fundcode, programcode, daterequried, missionno, departmentdimension, budgetdimesion, budgetdescription, empno, null);
        }
        
        /// <remarks/>
        public void FnInsertPurchaseRequestAsync(string fundcode, string programcode, System.DateTime daterequried, string missionno, string departmentdimension, string budgetdimesion, string budgetdescription, string empno, object userState) {
            if ((this.FnInsertPurchaseRequestOperationCompleted == null)) {
                this.FnInsertPurchaseRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPurchaseRequestOperationCompleted);
            }
            this.InvokeAsync("FnInsertPurchaseRequest", new object[] {
                        fundcode,
                        programcode,
                        daterequried,
                        missionno,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        empno}, this.FnInsertPurchaseRequestOperationCompleted, userState);
        }
        
        private void OnFnInsertPurchaseRequestOperationCompleted(object arg) {
            if ((this.FnInsertPurchaseRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPurchaseRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fninsertimprestnew", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fninsertimprestnew_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fninsertimprestnew(string fundcode, string programcode, string purpose, string departmentdimension, string budgetdimesion, string budgetdescription, string empno, string missionproporsal, string purchaserequestNo) {
            object[] results = this.Invoke("Fninsertimprestnew", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        empno,
                        missionproporsal,
                        purchaserequestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FninsertimprestnewAsync(string fundcode, string programcode, string purpose, string departmentdimension, string budgetdimesion, string budgetdescription, string empno, string missionproporsal, string purchaserequestNo) {
            this.FninsertimprestnewAsync(fundcode, programcode, purpose, departmentdimension, budgetdimesion, budgetdescription, empno, missionproporsal, purchaserequestNo, null);
        }
        
        /// <remarks/>
        public void FninsertimprestnewAsync(string fundcode, string programcode, string purpose, string departmentdimension, string budgetdimesion, string budgetdescription, string empno, string missionproporsal, string purchaserequestNo, object userState) {
            if ((this.FninsertimprestnewOperationCompleted == null)) {
                this.FninsertimprestnewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertimprestnewOperationCompleted);
            }
            this.InvokeAsync("Fninsertimprestnew", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        empno,
                        missionproporsal,
                        purchaserequestNo}, this.FninsertimprestnewOperationCompleted, userState);
        }
        
        private void OnFninsertimprestnewOperationCompleted(object arg) {
            if ((this.FninsertimprestnewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertimprestnewCompleted(this, new FninsertimprestnewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fnimprestlineinsert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fnimprestlineinsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fnimprestlineinsert(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno) {
            this.Invoke("Fnimprestlineinsert", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno});
        }
        
        /// <remarks/>
        public void FnimprestlineinsertAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno) {
            this.FnimprestlineinsertAsync(expensecategory, description, unitcost, currency, amount, documentno, null);
        }
        
        /// <remarks/>
        public void FnimprestlineinsertAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, object userState) {
            if ((this.FnimprestlineinsertOperationCompleted == null)) {
                this.FnimprestlineinsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnimprestlineinsertOperationCompleted);
            }
            this.InvokeAsync("Fnimprestlineinsert", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno}, this.FnimprestlineinsertOperationCompleted, userState);
        }
        
        private void OnFnimprestlineinsertOperationCompleted(object arg) {
            if ((this.FnimprestlineinsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnimprestlineinsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertPurchasenew", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertPurchasenew_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FninsertPurchasenew(string fundcode, string programcode, string purpose, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime daterequired, string departmentdimension, string budgetdimesion, string budgetdescription, string missionno, string empno) {
            object[] results = this.Invoke("FninsertPurchasenew", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        daterequired,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        missionno,
                        empno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FninsertPurchasenewAsync(string fundcode, string programcode, string purpose, System.DateTime daterequired, string departmentdimension, string budgetdimesion, string budgetdescription, string missionno, string empno) {
            this.FninsertPurchasenewAsync(fundcode, programcode, purpose, daterequired, departmentdimension, budgetdimesion, budgetdescription, missionno, empno, null);
        }
        
        /// <remarks/>
        public void FninsertPurchasenewAsync(string fundcode, string programcode, string purpose, System.DateTime daterequired, string departmentdimension, string budgetdimesion, string budgetdescription, string missionno, string empno, object userState) {
            if ((this.FninsertPurchasenewOperationCompleted == null)) {
                this.FninsertPurchasenewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertPurchasenewOperationCompleted);
            }
            this.InvokeAsync("FninsertPurchasenew", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        daterequired,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        missionno,
                        empno}, this.FninsertPurchasenewOperationCompleted, userState);
        }
        
        private void OnFninsertPurchasenewOperationCompleted(object arg) {
            if ((this.FninsertPurchasenewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertPurchasenewCompleted(this, new FninsertPurchasenewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPurchaselineinsert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPurchaselineinsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnPurchaselineinsert(string expensecategory, string description, decimal unicost, string currency, decimal amount, string documentno) {
            this.Invoke("FnPurchaselineinsert", new object[] {
                        expensecategory,
                        description,
                        unicost,
                        currency,
                        amount,
                        documentno});
        }
        
        /// <remarks/>
        public void FnPurchaselineinsertAsync(string expensecategory, string description, decimal unicost, string currency, decimal amount, string documentno) {
            this.FnPurchaselineinsertAsync(expensecategory, description, unicost, currency, amount, documentno, null);
        }
        
        /// <remarks/>
        public void FnPurchaselineinsertAsync(string expensecategory, string description, decimal unicost, string currency, decimal amount, string documentno, object userState) {
            if ((this.FnPurchaselineinsertOperationCompleted == null)) {
                this.FnPurchaselineinsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPurchaselineinsertOperationCompleted);
            }
            this.InvokeAsync("FnPurchaselineinsert", new object[] {
                        expensecategory,
                        description,
                        unicost,
                        currency,
                        amount,
                        documentno}, this.FnPurchaselineinsertOperationCompleted, userState);
        }
        
        private void OnFnPurchaselineinsertOperationCompleted(object arg) {
            if ((this.FnPurchaselineinsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPurchaselineinsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDimensionValuesList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDimensionValuesList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDimensionValuesList(string fundcode) {
            object[] results = this.Invoke("FnDimensionValuesList", new object[] {
                        fundcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDimensionValuesListAsync(string fundcode) {
            this.FnDimensionValuesListAsync(fundcode, null);
        }
        
        /// <remarks/>
        public void FnDimensionValuesListAsync(string fundcode, object userState) {
            if ((this.FnDimensionValuesListOperationCompleted == null)) {
                this.FnDimensionValuesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDimensionValuesListOperationCompleted);
            }
            this.InvokeAsync("FnDimensionValuesList", new object[] {
                        fundcode}, this.FnDimensionValuesListOperationCompleted, userState);
        }
        
        private void OnFnDimensionValuesListOperationCompleted(object arg) {
            if ((this.FnDimensionValuesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDimensionValuesListCompleted(this, new FnDimensionValuesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnApproval(string no) {
            this.Invoke("FnApproval", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void FnApprovalAsync(string no) {
            this.FnApprovalAsync(no, null);
        }
        
        /// <remarks/>
        public void FnApprovalAsync(string no, object userState) {
            if ((this.FnApprovalOperationCompleted == null)) {
                this.FnApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApprovalOperationCompleted);
            }
            this.InvokeAsync("FnApproval", new object[] {
                        no}, this.FnApprovalOperationCompleted, userState);
        }
        
        private void OnFnApprovalOperationCompleted(object arg) {
            if ((this.FnApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FncancelApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FncancelApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FncancelApproval(string no) {
            this.Invoke("FncancelApproval", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void FncancelApprovalAsync(string no) {
            this.FncancelApprovalAsync(no, null);
        }
        
        /// <remarks/>
        public void FncancelApprovalAsync(string no, object userState) {
            if ((this.FncancelApprovalOperationCompleted == null)) {
                this.FncancelApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFncancelApprovalOperationCompleted);
            }
            this.InvokeAsync("FncancelApproval", new object[] {
                        no}, this.FncancelApprovalOperationCompleted, userState);
        }
        
        private void OnFncancelApprovalOperationCompleted(object arg) {
            if ((this.FncancelApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FncancelApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSurrenderList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSurrenderList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSurrenderList(string empNo) {
            object[] results = this.Invoke("FnSurrenderList", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSurrenderListAsync(string empNo) {
            this.FnSurrenderListAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FnSurrenderListAsync(string empNo, object userState) {
            if ((this.FnSurrenderListOperationCompleted == null)) {
                this.FnSurrenderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSurrenderListOperationCompleted);
            }
            this.InvokeAsync("FnSurrenderList", new object[] {
                        empNo}, this.FnSurrenderListOperationCompleted, userState);
        }
        
        private void OnFnSurrenderListOperationCompleted(object arg) {
            if ((this.FnSurrenderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSurrenderListCompleted(this, new FnSurrenderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInstImrSrNew", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInstImrSrNew_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInstImrSrNew(string imprestno, string empno) {
            object[] results = this.Invoke("FnInstImrSrNew", new object[] {
                        imprestno,
                        empno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInstImrSrNewAsync(string imprestno, string empno) {
            this.FnInstImrSrNewAsync(imprestno, empno, null);
        }
        
        /// <remarks/>
        public void FnInstImrSrNewAsync(string imprestno, string empno, object userState) {
            if ((this.FnInstImrSrNewOperationCompleted == null)) {
                this.FnInstImrSrNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInstImrSrNewOperationCompleted);
            }
            this.InvokeAsync("FnInstImrSrNew", new object[] {
                        imprestno,
                        empno}, this.FnInstImrSrNewOperationCompleted, userState);
        }
        
        private void OnFnInstImrSrNewOperationCompleted(object arg) {
            if ((this.FnInstImrSrNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInstImrSrNewCompleted(this, new FnInstImrSrNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fninsertbudgetinfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fninsertbudgetinfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fninsertbudgetinfo(string budgetitem, string identifiedvendor, string documentno, decimal noofdays, decimal noofpas, decimal ksh, decimal othercurrency, string missionexpensecategory, string currencycode) {
            this.Invoke("Fninsertbudgetinfo", new object[] {
                        budgetitem,
                        identifiedvendor,
                        documentno,
                        noofdays,
                        noofpas,
                        ksh,
                        othercurrency,
                        missionexpensecategory,
                        currencycode});
        }
        
        /// <remarks/>
        public void FninsertbudgetinfoAsync(string budgetitem, string identifiedvendor, string documentno, decimal noofdays, decimal noofpas, decimal ksh, decimal othercurrency, string missionexpensecategory, string currencycode) {
            this.FninsertbudgetinfoAsync(budgetitem, identifiedvendor, documentno, noofdays, noofpas, ksh, othercurrency, missionexpensecategory, currencycode, null);
        }
        
        /// <remarks/>
        public void FninsertbudgetinfoAsync(string budgetitem, string identifiedvendor, string documentno, decimal noofdays, decimal noofpas, decimal ksh, decimal othercurrency, string missionexpensecategory, string currencycode, object userState) {
            if ((this.FninsertbudgetinfoOperationCompleted == null)) {
                this.FninsertbudgetinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertbudgetinfoOperationCompleted);
            }
            this.InvokeAsync("Fninsertbudgetinfo", new object[] {
                        budgetitem,
                        identifiedvendor,
                        documentno,
                        noofdays,
                        noofpas,
                        ksh,
                        othercurrency,
                        missionexpensecategory,
                        currencycode}, this.FninsertbudgetinfoOperationCompleted, userState);
        }
        
        private void OnFninsertbudgetinfoOperationCompleted(object arg) {
            if ((this.FninsertbudgetinfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertbudgetinfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fninsertteamroles", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fninsertteamroles_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fninsertteamroles(string name, string responsibility, string documentno) {
            this.Invoke("Fninsertteamroles", new object[] {
                        name,
                        responsibility,
                        documentno});
        }
        
        /// <remarks/>
        public void FninsertteamrolesAsync(string name, string responsibility, string documentno) {
            this.FninsertteamrolesAsync(name, responsibility, documentno, null);
        }
        
        /// <remarks/>
        public void FninsertteamrolesAsync(string name, string responsibility, string documentno, object userState) {
            if ((this.FninsertteamrolesOperationCompleted == null)) {
                this.FninsertteamrolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertteamrolesOperationCompleted);
            }
            this.InvokeAsync("Fninsertteamroles", new object[] {
                        name,
                        responsibility,
                        documentno}, this.FninsertteamrolesOperationCompleted, userState);
        }
        
        private void OnFninsertteamrolesOperationCompleted(object arg) {
            if ((this.FninsertteamrolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertteamrolesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fninsertmisssionobjectives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fninsertmisssionobjectives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fninsertmisssionobjectives(string description, string documentno) {
            this.Invoke("Fninsertmisssionobjectives", new object[] {
                        description,
                        documentno});
        }
        
        /// <remarks/>
        public void FninsertmisssionobjectivesAsync(string description, string documentno) {
            this.FninsertmisssionobjectivesAsync(description, documentno, null);
        }
        
        /// <remarks/>
        public void FninsertmisssionobjectivesAsync(string description, string documentno, object userState) {
            if ((this.FninsertmisssionobjectivesOperationCompleted == null)) {
                this.FninsertmisssionobjectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertmisssionobjectivesOperationCompleted);
            }
            this.InvokeAsync("Fninsertmisssionobjectives", new object[] {
                        description,
                        documentno}, this.FninsertmisssionobjectivesOperationCompleted, userState);
        }
        
        private void OnFninsertmisssionobjectivesOperationCompleted(object arg) {
            if ((this.FninsertmisssionobjectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertmisssionobjectivesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fninsertmissionactivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fninsertmissionactivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fninsertmissionactivities([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, string description, string documentno, string descrition2, string description3) {
            this.Invoke("Fninsertmissionactivities", new object[] {
                        date,
                        description,
                        documentno,
                        descrition2,
                        description3});
        }
        
        /// <remarks/>
        public void FninsertmissionactivitiesAsync(System.DateTime date, string description, string documentno, string descrition2, string description3) {
            this.FninsertmissionactivitiesAsync(date, description, documentno, descrition2, description3, null);
        }
        
        /// <remarks/>
        public void FninsertmissionactivitiesAsync(System.DateTime date, string description, string documentno, string descrition2, string description3, object userState) {
            if ((this.FninsertmissionactivitiesOperationCompleted == null)) {
                this.FninsertmissionactivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertmissionactivitiesOperationCompleted);
            }
            this.InvokeAsync("Fninsertmissionactivities", new object[] {
                        date,
                        description,
                        documentno,
                        descrition2,
                        description3}, this.FninsertmissionactivitiesOperationCompleted, userState);
        }
        
        private void OnFninsertmissionactivitiesOperationCompleted(object arg) {
            if ((this.FninsertmissionactivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertmissionactivitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnpurchaseLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnpurchaseLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnpurchaseLines(string documentNo) {
            object[] results = this.Invoke("FnpurchaseLines", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnpurchaseLinesAsync(string documentNo) {
            this.FnpurchaseLinesAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void FnpurchaseLinesAsync(string documentNo, object userState) {
            if ((this.FnpurchaseLinesOperationCompleted == null)) {
                this.FnpurchaseLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnpurchaseLinesOperationCompleted);
            }
            this.InvokeAsync("FnpurchaseLines", new object[] {
                        documentNo}, this.FnpurchaseLinesOperationCompleted, userState);
        }
        
        private void OnFnpurchaseLinesOperationCompleted(object arg) {
            if ((this.FnpurchaseLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnpurchaseLinesCompleted(this, new FnpurchaseLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertGeneralJournal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertGeneralJournal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInsertGeneralJournal([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime postingDate, string documentNo, string payingBank, decimal amount, string descirption, string empNo) {
            this.Invoke("FnInsertGeneralJournal", new object[] {
                        postingDate,
                        documentNo,
                        payingBank,
                        amount,
                        descirption,
                        empNo});
        }
        
        /// <remarks/>
        public void FnInsertGeneralJournalAsync(System.DateTime postingDate, string documentNo, string payingBank, decimal amount, string descirption, string empNo) {
            this.FnInsertGeneralJournalAsync(postingDate, documentNo, payingBank, amount, descirption, empNo, null);
        }
        
        /// <remarks/>
        public void FnInsertGeneralJournalAsync(System.DateTime postingDate, string documentNo, string payingBank, decimal amount, string descirption, string empNo, object userState) {
            if ((this.FnInsertGeneralJournalOperationCompleted == null)) {
                this.FnInsertGeneralJournalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertGeneralJournalOperationCompleted);
            }
            this.InvokeAsync("FnInsertGeneralJournal", new object[] {
                        postingDate,
                        documentNo,
                        payingBank,
                        amount,
                        descirption,
                        empNo}, this.FnInsertGeneralJournalOperationCompleted, userState);
        }
        
        private void OnFnInsertGeneralJournalOperationCompleted(object arg) {
            if ((this.FnInsertGeneralJournalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertGeneralJournalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnJournalLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnJournalLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnJournalLines(string empno, string payingBank) {
            object[] results = this.Invoke("FnJournalLines", new object[] {
                        empno,
                        payingBank});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnJournalLinesAsync(string empno, string payingBank) {
            this.FnJournalLinesAsync(empno, payingBank, null);
        }
        
        /// <remarks/>
        public void FnJournalLinesAsync(string empno, string payingBank, object userState) {
            if ((this.FnJournalLinesOperationCompleted == null)) {
                this.FnJournalLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnJournalLinesOperationCompleted);
            }
            this.InvokeAsync("FnJournalLines", new object[] {
                        empno,
                        payingBank}, this.FnJournalLinesOperationCompleted, userState);
        }
        
        private void OnFnJournalLinesOperationCompleted(object arg) {
            if ((this.FnJournalLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnJournalLinesCompleted(this, new FnJournalLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdatebudgetinfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdatebudgetinfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnUpdatebudgetinfo(
                    string budgetitem, 
                    string identifiedvendor, 
                    string documentno, 
                    decimal noofdays, 
                    decimal noofpas, 
                    decimal ksh, 
                    decimal othercurrency, 
                    string missionexpensecategory, 
                    string documenttype, 
                    int lineno, 
                    int linetype, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, 
                    string activity, 
                    string duration, 
                    string output, 
                    string name, 
                    string responsibility, 
                    string description, 
                    string currenccycode) {
            this.Invoke("FnUpdatebudgetinfo", new object[] {
                        budgetitem,
                        identifiedvendor,
                        documentno,
                        noofdays,
                        noofpas,
                        ksh,
                        othercurrency,
                        missionexpensecategory,
                        documenttype,
                        lineno,
                        linetype,
                        date,
                        activity,
                        duration,
                        output,
                        name,
                        responsibility,
                        description,
                        currenccycode});
        }
        
        /// <remarks/>
        public void FnUpdatebudgetinfoAsync(
                    string budgetitem, 
                    string identifiedvendor, 
                    string documentno, 
                    decimal noofdays, 
                    decimal noofpas, 
                    decimal ksh, 
                    decimal othercurrency, 
                    string missionexpensecategory, 
                    string documenttype, 
                    int lineno, 
                    int linetype, 
                    System.DateTime date, 
                    string activity, 
                    string duration, 
                    string output, 
                    string name, 
                    string responsibility, 
                    string description, 
                    string currenccycode) {
            this.FnUpdatebudgetinfoAsync(budgetitem, identifiedvendor, documentno, noofdays, noofpas, ksh, othercurrency, missionexpensecategory, documenttype, lineno, linetype, date, activity, duration, output, name, responsibility, description, currenccycode, null);
        }
        
        /// <remarks/>
        public void FnUpdatebudgetinfoAsync(
                    string budgetitem, 
                    string identifiedvendor, 
                    string documentno, 
                    decimal noofdays, 
                    decimal noofpas, 
                    decimal ksh, 
                    decimal othercurrency, 
                    string missionexpensecategory, 
                    string documenttype, 
                    int lineno, 
                    int linetype, 
                    System.DateTime date, 
                    string activity, 
                    string duration, 
                    string output, 
                    string name, 
                    string responsibility, 
                    string description, 
                    string currenccycode, 
                    object userState) {
            if ((this.FnUpdatebudgetinfoOperationCompleted == null)) {
                this.FnUpdatebudgetinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatebudgetinfoOperationCompleted);
            }
            this.InvokeAsync("FnUpdatebudgetinfo", new object[] {
                        budgetitem,
                        identifiedvendor,
                        documentno,
                        noofdays,
                        noofpas,
                        ksh,
                        othercurrency,
                        missionexpensecategory,
                        documenttype,
                        lineno,
                        linetype,
                        date,
                        activity,
                        duration,
                        output,
                        name,
                        responsibility,
                        description,
                        currenccycode}, this.FnUpdatebudgetinfoOperationCompleted, userState);
        }
        
        private void OnFnUpdatebudgetinfoOperationCompleted(object arg) {
            if ((this.FnUpdatebudgetinfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatebudgetinfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdatePurchasenew", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdatePurchasenew_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdatePurchasenew(string fundcode, string programcode, string purpose, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime daterequired, string departmentdimension, string budgetdimesion, string budgetdescription, string missionno, string reqne) {
            object[] results = this.Invoke("FnUpdatePurchasenew", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        daterequired,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        missionno,
                        reqne});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePurchasenewAsync(string fundcode, string programcode, string purpose, System.DateTime daterequired, string departmentdimension, string budgetdimesion, string budgetdescription, string missionno, string reqne) {
            this.FnUpdatePurchasenewAsync(fundcode, programcode, purpose, daterequired, departmentdimension, budgetdimesion, budgetdescription, missionno, reqne, null);
        }
        
        /// <remarks/>
        public void FnUpdatePurchasenewAsync(string fundcode, string programcode, string purpose, System.DateTime daterequired, string departmentdimension, string budgetdimesion, string budgetdescription, string missionno, string reqne, object userState) {
            if ((this.FnUpdatePurchasenewOperationCompleted == null)) {
                this.FnUpdatePurchasenewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePurchasenewOperationCompleted);
            }
            this.InvokeAsync("FnUpdatePurchasenew", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        daterequired,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        missionno,
                        reqne}, this.FnUpdatePurchasenewOperationCompleted, userState);
        }
        
        private void OnFnUpdatePurchasenewOperationCompleted(object arg) {
            if ((this.FnUpdatePurchasenewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePurchasenewCompleted(this, new FnUpdatePurchasenewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FngetLeaveBalanceType", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FngetLeaveBalanceType_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetLeaveBalanceType(string empNo, string leavetype) {
            object[] results = this.Invoke("FngetLeaveBalanceType", new object[] {
                        empNo,
                        leavetype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetLeaveBalanceTypeAsync(string empNo, string leavetype) {
            this.FngetLeaveBalanceTypeAsync(empNo, leavetype, null);
        }
        
        /// <remarks/>
        public void FngetLeaveBalanceTypeAsync(string empNo, string leavetype, object userState) {
            if ((this.FngetLeaveBalanceTypeOperationCompleted == null)) {
                this.FngetLeaveBalanceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetLeaveBalanceTypeOperationCompleted);
            }
            this.InvokeAsync("FngetLeaveBalanceType", new object[] {
                        empNo,
                        leavetype}, this.FngetLeaveBalanceTypeOperationCompleted, userState);
        }
        
        private void OnFngetLeaveBalanceTypeOperationCompleted(object arg) {
            if ((this.FngetLeaveBalanceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetLeaveBalanceTypeCompleted(this, new FngetLeaveBalanceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertTrainingRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertTrainingRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInsertTrainingRequest(string need, string empployees, string link, string purpose, string outcome, string details, string otherdetails, string empno) {
            this.Invoke("FnInsertTrainingRequest", new object[] {
                        need,
                        empployees,
                        link,
                        purpose,
                        outcome,
                        details,
                        otherdetails,
                        empno});
        }
        
        /// <remarks/>
        public void FnInsertTrainingRequestAsync(string need, string empployees, string link, string purpose, string outcome, string details, string otherdetails, string empno) {
            this.FnInsertTrainingRequestAsync(need, empployees, link, purpose, outcome, details, otherdetails, empno, null);
        }
        
        /// <remarks/>
        public void FnInsertTrainingRequestAsync(string need, string empployees, string link, string purpose, string outcome, string details, string otherdetails, string empno, object userState) {
            if ((this.FnInsertTrainingRequestOperationCompleted == null)) {
                this.FnInsertTrainingRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertTrainingRequestOperationCompleted);
            }
            this.InvokeAsync("FnInsertTrainingRequest", new object[] {
                        need,
                        empployees,
                        link,
                        purpose,
                        outcome,
                        details,
                        otherdetails,
                        empno}, this.FnInsertTrainingRequestOperationCompleted, userState);
        }
        
        private void OnFnInsertTrainingRequestOperationCompleted(object arg) {
            if ((this.FnInsertTrainingRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertTrainingRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnTrainingList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnTrainingList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnTrainingList(string empno) {
            object[] results = this.Invoke("FnTrainingList", new object[] {
                        empno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnTrainingListAsync(string empno) {
            this.FnTrainingListAsync(empno, null);
        }
        
        /// <remarks/>
        public void FnTrainingListAsync(string empno, object userState) {
            if ((this.FnTrainingListOperationCompleted == null)) {
                this.FnTrainingListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnTrainingListOperationCompleted);
            }
            this.InvokeAsync("FnTrainingList", new object[] {
                        empno}, this.FnTrainingListOperationCompleted, userState);
        }
        
        private void OnFnTrainingListOperationCompleted(object arg) {
            if ((this.FnTrainingListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnTrainingListCompleted(this, new FnTrainingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdateTrainingRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdateTrainingRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnUpdateTrainingRequest(string need, string empployees, string link, string purpose, string outcome, string details, string otherdetails, string empno, string applicationNo) {
            this.Invoke("FnUpdateTrainingRequest", new object[] {
                        need,
                        empployees,
                        link,
                        purpose,
                        outcome,
                        details,
                        otherdetails,
                        empno,
                        applicationNo});
        }
        
        /// <remarks/>
        public void FnUpdateTrainingRequestAsync(string need, string empployees, string link, string purpose, string outcome, string details, string otherdetails, string empno, string applicationNo) {
            this.FnUpdateTrainingRequestAsync(need, empployees, link, purpose, outcome, details, otherdetails, empno, applicationNo, null);
        }
        
        /// <remarks/>
        public void FnUpdateTrainingRequestAsync(string need, string empployees, string link, string purpose, string outcome, string details, string otherdetails, string empno, string applicationNo, object userState) {
            if ((this.FnUpdateTrainingRequestOperationCompleted == null)) {
                this.FnUpdateTrainingRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateTrainingRequestOperationCompleted);
            }
            this.InvokeAsync("FnUpdateTrainingRequest", new object[] {
                        need,
                        empployees,
                        link,
                        purpose,
                        outcome,
                        details,
                        otherdetails,
                        empno,
                        applicationNo}, this.FnUpdateTrainingRequestOperationCompleted, userState);
        }
        
        private void OnFnUpdateTrainingRequestOperationCompleted(object arg) {
            if ((this.FnUpdateTrainingRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateTrainingRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnReqTrainingApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnReqTrainingApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnReqTrainingApproval(string no) {
            this.Invoke("FnReqTrainingApproval", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void FnReqTrainingApprovalAsync(string no) {
            this.FnReqTrainingApprovalAsync(no, null);
        }
        
        /// <remarks/>
        public void FnReqTrainingApprovalAsync(string no, object userState) {
            if ((this.FnReqTrainingApprovalOperationCompleted == null)) {
                this.FnReqTrainingApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnReqTrainingApprovalOperationCompleted);
            }
            this.InvokeAsync("FnReqTrainingApproval", new object[] {
                        no}, this.FnReqTrainingApprovalOperationCompleted, userState);
        }
        
        private void OnFnReqTrainingApprovalOperationCompleted(object arg) {
            if ((this.FnReqTrainingApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnReqTrainingApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnInsertAttachments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnInsertAttachments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInsertAttachments(string extension, string file, string documentNo, string description) {
            this.Invoke("FnInsertAttachments", new object[] {
                        extension,
                        file,
                        documentNo,
                        description});
        }
        
        /// <remarks/>
        public void FnInsertAttachmentsAsync(string extension, string file, string documentNo, string description) {
            this.FnInsertAttachmentsAsync(extension, file, documentNo, description, null);
        }
        
        /// <remarks/>
        public void FnInsertAttachmentsAsync(string extension, string file, string documentNo, string description, object userState) {
            if ((this.FnInsertAttachmentsOperationCompleted == null)) {
                this.FnInsertAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertAttachmentsOperationCompleted);
            }
            this.InvokeAsync("FnInsertAttachments", new object[] {
                        extension,
                        file,
                        documentNo,
                        description}, this.FnInsertAttachmentsOperationCompleted, userState);
        }
        
        private void OnFnInsertAttachmentsOperationCompleted(object arg) {
            if ((this.FnInsertAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertAttachmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUploadedDocuments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUploadedDocuments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUploadedDocuments(string documentNo) {
            object[] results = this.Invoke("FnUploadedDocuments", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUploadedDocumentsAsync(string documentNo) {
            this.FnUploadedDocumentsAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void FnUploadedDocumentsAsync(string documentNo, object userState) {
            if ((this.FnUploadedDocumentsOperationCompleted == null)) {
                this.FnUploadedDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUploadedDocumentsOperationCompleted);
            }
            this.InvokeAsync("FnUploadedDocuments", new object[] {
                        documentNo}, this.FnUploadedDocumentsOperationCompleted, userState);
        }
        
        private void OnFnUploadedDocumentsOperationCompleted(object arg) {
            if ((this.FnUploadedDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUploadedDocumentsCompleted(this, new FnUploadedDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSurrenderLineUpdate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSurrenderLineUpdate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSurrenderLineUpdate(int lineno, decimal amountsepnt, string document, decimal cashrefund) {
            this.Invoke("FnSurrenderLineUpdate", new object[] {
                        lineno,
                        amountsepnt,
                        document,
                        cashrefund});
        }
        
        /// <remarks/>
        public void FnSurrenderLineUpdateAsync(int lineno, decimal amountsepnt, string document, decimal cashrefund) {
            this.FnSurrenderLineUpdateAsync(lineno, amountsepnt, document, cashrefund, null);
        }
        
        /// <remarks/>
        public void FnSurrenderLineUpdateAsync(int lineno, decimal amountsepnt, string document, decimal cashrefund, object userState) {
            if ((this.FnSurrenderLineUpdateOperationCompleted == null)) {
                this.FnSurrenderLineUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSurrenderLineUpdateOperationCompleted);
            }
            this.InvokeAsync("FnSurrenderLineUpdate", new object[] {
                        lineno,
                        amountsepnt,
                        document,
                        cashrefund}, this.FnSurrenderLineUpdateOperationCompleted, userState);
        }
        
        private void OnFnSurrenderLineUpdateOperationCompleted(object arg) {
            if ((this.FnSurrenderLineUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSurrenderLineUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnTrainingSchedule", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnTrainingSchedule_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnTrainingSchedule() {
            object[] results = this.Invoke("FnTrainingSchedule", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnTrainingScheduleAsync() {
            this.FnTrainingScheduleAsync(null);
        }
        
        /// <remarks/>
        public void FnTrainingScheduleAsync(object userState) {
            if ((this.FnTrainingScheduleOperationCompleted == null)) {
                this.FnTrainingScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnTrainingScheduleOperationCompleted);
            }
            this.InvokeAsync("FnTrainingSchedule", new object[0], this.FnTrainingScheduleOperationCompleted, userState);
        }
        
        private void OnFnTrainingScheduleOperationCompleted(object arg) {
            if ((this.FnTrainingScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnTrainingScheduleCompleted(this, new FnTrainingScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fininserttrainingschedule", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fininserttrainingschedule_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fininserttrainingschedule(string year, string facilitator, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime scheduleDate, string employees, string evidence, string department, string topic) {
            this.Invoke("Fininserttrainingschedule", new object[] {
                        year,
                        facilitator,
                        scheduleDate,
                        employees,
                        evidence,
                        department,
                        topic});
        }
        
        /// <remarks/>
        public void FininserttrainingscheduleAsync(string year, string facilitator, System.DateTime scheduleDate, string employees, string evidence, string department, string topic) {
            this.FininserttrainingscheduleAsync(year, facilitator, scheduleDate, employees, evidence, department, topic, null);
        }
        
        /// <remarks/>
        public void FininserttrainingscheduleAsync(string year, string facilitator, System.DateTime scheduleDate, string employees, string evidence, string department, string topic, object userState) {
            if ((this.FininserttrainingscheduleOperationCompleted == null)) {
                this.FininserttrainingscheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFininserttrainingscheduleOperationCompleted);
            }
            this.InvokeAsync("Fininserttrainingschedule", new object[] {
                        year,
                        facilitator,
                        scheduleDate,
                        employees,
                        evidence,
                        department,
                        topic}, this.FininserttrainingscheduleOperationCompleted, userState);
        }
        
        private void OnFininserttrainingscheduleOperationCompleted(object arg) {
            if ((this.FininserttrainingscheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FininserttrainingscheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeletePurchaseLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeletePurchaseLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDeletePurchaseLine(int lineno, string documentNo) {
            this.Invoke("FnDeletePurchaseLine", new object[] {
                        lineno,
                        documentNo});
        }
        
        /// <remarks/>
        public void FnDeletePurchaseLineAsync(int lineno, string documentNo) {
            this.FnDeletePurchaseLineAsync(lineno, documentNo, null);
        }
        
        /// <remarks/>
        public void FnDeletePurchaseLineAsync(int lineno, string documentNo, object userState) {
            if ((this.FnDeletePurchaseLineOperationCompleted == null)) {
                this.FnDeletePurchaseLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeletePurchaseLineOperationCompleted);
            }
            this.InvokeAsync("FnDeletePurchaseLine", new object[] {
                        lineno,
                        documentNo}, this.FnDeletePurchaseLineOperationCompleted, userState);
        }
        
        private void OnFnDeletePurchaseLineOperationCompleted(object arg) {
            if ((this.FnDeletePurchaseLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeletePurchaseLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fnimprestlinemodify", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fnimprestlinemodify_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fnimprestlinemodify(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, int lienno) {
            this.Invoke("Fnimprestlinemodify", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        lienno});
        }
        
        /// <remarks/>
        public void FnimprestlinemodifyAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, int lienno) {
            this.FnimprestlinemodifyAsync(expensecategory, description, unitcost, currency, amount, documentno, lienno, null);
        }
        
        /// <remarks/>
        public void FnimprestlinemodifyAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, int lienno, object userState) {
            if ((this.FnimprestlinemodifyOperationCompleted == null)) {
                this.FnimprestlinemodifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnimprestlinemodifyOperationCompleted);
            }
            this.InvokeAsync("Fnimprestlinemodify", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        lienno}, this.FnimprestlinemodifyOperationCompleted, userState);
        }
        
        private void OnFnimprestlinemodifyOperationCompleted(object arg) {
            if ((this.FnimprestlinemodifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnimprestlinemodifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertimprestModify", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertimprestModify_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FninsertimprestModify(string fundcode, string programcode, string purpose, string departmentdimension, string budgetdimesion, string budgetdescription, string empno, string missionproporsal, string purchaserequestNo, string document) {
            this.Invoke("FninsertimprestModify", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        empno,
                        missionproporsal,
                        purchaserequestNo,
                        document});
        }
        
        /// <remarks/>
        public void FninsertimprestModifyAsync(string fundcode, string programcode, string purpose, string departmentdimension, string budgetdimesion, string budgetdescription, string empno, string missionproporsal, string purchaserequestNo, string document) {
            this.FninsertimprestModifyAsync(fundcode, programcode, purpose, departmentdimension, budgetdimesion, budgetdescription, empno, missionproporsal, purchaserequestNo, document, null);
        }
        
        /// <remarks/>
        public void FninsertimprestModifyAsync(string fundcode, string programcode, string purpose, string departmentdimension, string budgetdimesion, string budgetdescription, string empno, string missionproporsal, string purchaserequestNo, string document, object userState) {
            if ((this.FninsertimprestModifyOperationCompleted == null)) {
                this.FninsertimprestModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertimprestModifyOperationCompleted);
            }
            this.InvokeAsync("FninsertimprestModify", new object[] {
                        fundcode,
                        programcode,
                        purpose,
                        departmentdimension,
                        budgetdimesion,
                        budgetdescription,
                        empno,
                        missionproporsal,
                        purchaserequestNo,
                        document}, this.FninsertimprestModifyOperationCompleted, userState);
        }
        
        private void OnFninsertimprestModifyOperationCompleted(object arg) {
            if ((this.FninsertimprestModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertimprestModifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnPurchaselineModify", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnPurchaselineModify_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnPurchaselineModify(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, int lineno) {
            this.Invoke("FnPurchaselineModify", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        lineno});
        }
        
        /// <remarks/>
        public void FnPurchaselineModifyAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, int lineno) {
            this.FnPurchaselineModifyAsync(expensecategory, description, unitcost, currency, amount, documentno, lineno, null);
        }
        
        /// <remarks/>
        public void FnPurchaselineModifyAsync(string expensecategory, string description, decimal unitcost, string currency, decimal amount, string documentno, int lineno, object userState) {
            if ((this.FnPurchaselineModifyOperationCompleted == null)) {
                this.FnPurchaselineModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPurchaselineModifyOperationCompleted);
            }
            this.InvokeAsync("FnPurchaselineModify", new object[] {
                        expensecategory,
                        description,
                        unitcost,
                        currency,
                        amount,
                        documentno,
                        lineno}, this.FnPurchaselineModifyOperationCompleted, userState);
        }
        
        private void OnFnPurchaselineModifyOperationCompleted(object arg) {
            if ((this.FnPurchaselineModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPurchaselineModifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FninsertBudgetNotes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FninsertBudgetNotes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FninsertBudgetNotes(string details, string vendor1, string vendor2, string vendor3, string comments, string document) {
            this.Invoke("FninsertBudgetNotes", new object[] {
                        details,
                        vendor1,
                        vendor2,
                        vendor3,
                        comments,
                        document});
        }
        
        /// <remarks/>
        public void FninsertBudgetNotesAsync(string details, string vendor1, string vendor2, string vendor3, string comments, string document) {
            this.FninsertBudgetNotesAsync(details, vendor1, vendor2, vendor3, comments, document, null);
        }
        
        /// <remarks/>
        public void FninsertBudgetNotesAsync(string details, string vendor1, string vendor2, string vendor3, string comments, string document, object userState) {
            if ((this.FninsertBudgetNotesOperationCompleted == null)) {
                this.FninsertBudgetNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFninsertBudgetNotesOperationCompleted);
            }
            this.InvokeAsync("FninsertBudgetNotes", new object[] {
                        details,
                        vendor1,
                        vendor2,
                        vendor3,
                        comments,
                        document}, this.FninsertBudgetNotesOperationCompleted, userState);
        }
        
        private void OnFninsertBudgetNotesOperationCompleted(object arg) {
            if ((this.FninsertBudgetNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FninsertBudgetNotesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUdpateBudgetNotes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUdpateBudgetNotes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnUdpateBudgetNotes(string details, string vendor1, string vendor2, string vendor3, string comments, string document, int lineno) {
            this.Invoke("FnUdpateBudgetNotes", new object[] {
                        details,
                        vendor1,
                        vendor2,
                        vendor3,
                        comments,
                        document,
                        lineno});
        }
        
        /// <remarks/>
        public void FnUdpateBudgetNotesAsync(string details, string vendor1, string vendor2, string vendor3, string comments, string document, int lineno) {
            this.FnUdpateBudgetNotesAsync(details, vendor1, vendor2, vendor3, comments, document, lineno, null);
        }
        
        /// <remarks/>
        public void FnUdpateBudgetNotesAsync(string details, string vendor1, string vendor2, string vendor3, string comments, string document, int lineno, object userState) {
            if ((this.FnUdpateBudgetNotesOperationCompleted == null)) {
                this.FnUdpateBudgetNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUdpateBudgetNotesOperationCompleted);
            }
            this.InvokeAsync("FnUdpateBudgetNotes", new object[] {
                        details,
                        vendor1,
                        vendor2,
                        vendor3,
                        comments,
                        document,
                        lineno}, this.FnUdpateBudgetNotesOperationCompleted, userState);
        }
        
        private void OnFnUdpateBudgetNotesOperationCompleted(object arg) {
            if ((this.FnUdpateBudgetNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUdpateBudgetNotesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetcurrencyCodes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetcurrencyCodes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetcurrencyCodes() {
            object[] results = this.Invoke("FnGetcurrencyCodes", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetcurrencyCodesAsync() {
            this.FnGetcurrencyCodesAsync(null);
        }
        
        /// <remarks/>
        public void FnGetcurrencyCodesAsync(object userState) {
            if ((this.FnGetcurrencyCodesOperationCompleted == null)) {
                this.FnGetcurrencyCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetcurrencyCodesOperationCompleted);
            }
            this.InvokeAsync("FnGetcurrencyCodes", new object[0], this.FnGetcurrencyCodesOperationCompleted, userState);
        }
        
        private void OnFnGetcurrencyCodesOperationCompleted(object arg) {
            if ((this.FnGetcurrencyCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetcurrencyCodesCompleted(this, new FnGetcurrencyCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAttachment(int attachment, ref string pictureText) {
            object[] results = this.Invoke("FnGetAttachment", new object[] {
                        attachment,
                        pictureText});
            pictureText = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAttachmentAsync(int attachment, string pictureText) {
            this.FnGetAttachmentAsync(attachment, pictureText, null);
        }
        
        /// <remarks/>
        public void FnGetAttachmentAsync(int attachment, string pictureText, object userState) {
            if ((this.FnGetAttachmentOperationCompleted == null)) {
                this.FnGetAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAttachmentOperationCompleted);
            }
            this.InvokeAsync("FnGetAttachment", new object[] {
                        attachment,
                        pictureText}, this.FnGetAttachmentOperationCompleted, userState);
        }
        
        private void OnFnGetAttachmentOperationCompleted(object arg) {
            if ((this.FnGetAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAttachmentCompleted(this, new FnGetAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDeleteAttachment(int attachment) {
            this.Invoke("FnDeleteAttachment", new object[] {
                        attachment});
        }
        
        /// <remarks/>
        public void FnDeleteAttachmentAsync(int attachment) {
            this.FnDeleteAttachmentAsync(attachment, null);
        }
        
        /// <remarks/>
        public void FnDeleteAttachmentAsync(int attachment, object userState) {
            if ((this.FnDeleteAttachmentOperationCompleted == null)) {
                this.FnDeleteAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteAttachmentOperationCompleted);
            }
            this.InvokeAsync("FnDeleteAttachment", new object[] {
                        attachment}, this.FnDeleteAttachmentOperationCompleted, userState);
        }
        
        private void OnFnDeleteAttachmentOperationCompleted(object arg) {
            if ((this.FnDeleteAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetApprovalEntriesCompletedEventHandler(object sender, FnGetApprovalEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetApprovalEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetApprovalEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUploadedDocuments2CompletedEventHandler(object sender, FnUploadedDocuments2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUploadedDocuments2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUploadedDocuments2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnhrdocumentsCompletedEventHandler(object sender, FnhrdocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnhrdocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnhrdocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetdocumentsCompletedEventHandler(object sender, FnGetdocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetdocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetdocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pictureText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnsuggestionboxCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnAppraisalsCompletedEventHandler(object sender, FnAppraisalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAppraisalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAppraisalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnNewappraisalCompletedEventHandler(object sender, FnNewappraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewappraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewappraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnEditappraisalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FngrievancesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnExitInterviewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetExitInterviewCompletedEventHandler(object sender, FnGetExitInterviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetExitInterviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetExitInterviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetInductionScheduleCompletedEventHandler(object sender, FnGetInductionScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetInductionScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetInductionScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPaymentMemosListCompletedEventHandler(object sender, FnPaymentMemosListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPaymentMemosListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPaymentMemosListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertPaymentmemoCompletedEventHandler(object sender, FnInsertPaymentmemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPaymentmemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPaymentmemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnupdatePaymentmemoCompletedEventHandler(object sender, FnupdatePaymentmemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnupdatePaymentmemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnupdatePaymentmemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertTimeSheetCompletedEventHandler(object sender, FnInsertTimeSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnModifyTimeSheetCompletedEventHandler(object sender, FnModifyTimeSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnModifyTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnModifyTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetTimesheetsCompletedEventHandler(object sender, FnGetTimesheetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetTimesheetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetTimesheetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertTimesheetLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnModifyTimesheetLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertMileageCompletedEventHandler(object sender, FnInsertMileageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertMileageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertMileageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnModifyMileageCompletedEventHandler(object sender, FnModifyMileageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnModifyMileageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnModifyMileageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetMileagesCompletedEventHandler(object sender, FnGetMileagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetMileagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetMileagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertMileageLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnModifyMileageLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnFundCodeCompletedEventHandler(object sender, FnFundCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnFundCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnFundCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnProjectCodeCompletedEventHandler(object sender, FnProjectCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnProjectCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnProjectCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnBudgetLineCodeCompletedEventHandler(object sender, FnBudgetLineCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnBudgetLineCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnBudgetLineCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnCategoriesCodeCompletedEventHandler(object sender, FnCategoriesCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCategoriesCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCategoriesCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertTARCompletedEventHandler(object sender, FninsertTARCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FninsertTARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FninsertTARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertTarLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertFIndingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertChallengesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertConclusionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnStandardTextsCompletedEventHandler(object sender, FnStandardTextsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnStandardTextsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnStandardTextsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertBudgetActivityCompletedEventHandler(object sender, FninsertBudgetActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FninsertBudgetActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FninsertBudgetActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertBudgetActivityLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdateBudgetActivityCompletedEventHandler(object sender, FnUpdateBudgetActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateBudgetActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateBudgetActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdateBudgetActivityLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdateTARCompletedEventHandler(object sender, FnUpdateTARCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateTARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateTARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdateTARLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnAdvertsCompletedEventHandler(object sender, FnAdvertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAdvertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAdvertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertApplicationProfileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnMemberProfileCompletedEventHandler(object sender, FnMemberProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnMemberProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnMemberProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnprofileQualificationsInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLookupCompletedEventHandler(object sender, FnLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetQualificationsCompletedEventHandler(object sender, FnGetQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnApplyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnAdvertCompletedEventHandler(object sender, FnAdvertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAdvertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAdvertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnAdvertAppliedCompletedEventHandler(object sender, FnAdvertAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAdvertAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAdvertAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDepartmentValueLeaveCompletedEventHandler(object sender, FnDepartmentValueLeaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDepartmentValueLeaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDepartmentValueLeaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertAppraisalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdateAppraisalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnAppraisalListCompletedEventHandler(object sender, FnAppraisalListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAppraisalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAppraisalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestRequisitionCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLeaveApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLeaveApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetPayslipCompletedEventHandler(object sender, FnGetPayslipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPayslipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPayslipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string bigText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestRequisitionUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnApproveRecordsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLeaveCancelApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestCancelApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnRejectApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestSurrenderApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInserImprestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateLeaveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetEmployeeDetailsCompletedEventHandler(object sender, FnGetEmployeeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetEmployeeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetEmployeeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetPaymentInformationCompletedEventHandler(object sender, FnGetPaymentInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPaymentInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPaymentInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetSummaryPaymentCompletedEventHandler(object sender, FnGetSummaryPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetSummaryPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetSummaryPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnloginCompletedEventHandler(object sender, FnloginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnloginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnloginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnRegisterCompletedEventHandler(object sender, FnRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninserreccodeCompletedEventHandler(object sender, FninserreccodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FninserreccodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FninserreccodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetPeriodsCompletedEventHandler(object sender, FnGetPeriodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnleaveinformationCompletedEventHandler(object sender, FnleaveinformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnleaveinformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnleaveinformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLeaveListCompletedEventHandler(object sender, FnLeaveListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLeaveListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLeaveListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLeaveCardCompletedEventHandler(object sender, FnLeaveCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLeaveCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLeaveCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetLeaveTypesCompletedEventHandler(object sender, FnGetLeaveTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetLeaveTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetLeaveTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnHrEmployeesCompletedEventHandler(object sender, FnHrEmployeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnHrEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnHrEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnEditApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetleaveStatementCompletedEventHandler(object sender, FnGetleaveStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetleaveStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetleaveStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string bigText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetP9ReportCompletedEventHandler(object sender, FnGetP9ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetP9ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetP9ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string bigText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLeaveDeleteCompletedEventHandler(object sender, FnLeaveDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLeaveDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLeaveDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdateImprestCardCompletedEventHandler(object sender, FnUpdateImprestCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateImprestCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateImprestCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestCardCompletedEventHandler(object sender, FnImprestCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnImprestCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnImprestCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestCardEditCompletedEventHandler(object sender, FnImprestCardEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnImprestCardEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnImprestCardEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPettyCashCardEditCompletedEventHandler(object sender, FnPettyCashCardEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPettyCashCardEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPettyCashCardEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPettyCashCardDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPettyCashCardDoUpdateCompletedEventHandler(object sender, FnPettyCashCardDoUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPettyCashCardDoUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPettyCashCardDoUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPettyCashCardCompletedEventHandler(object sender, FnPettyCashCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPettyCashCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPettyCashCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPettyCashListCompletedEventHandler(object sender, FnPettyCashListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPettyCashListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPettyCashListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPettyCashBankCompletedEventHandler(object sender, FnPettyCashBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPettyCashBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPettyCashBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPettyCashApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPaymentTypesCompletedEventHandler(object sender, FnPaymentTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPaymentTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPaymentTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestLineDeleteCompletedEventHandler(object sender, FnImprestLineDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnImprestLineDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnImprestLineDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestLineCompletedEventHandler(object sender, FnImprestLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnImprestLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnImprestLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestLineCardCompletedEventHandler(object sender, FnImprestLineCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnImprestLineCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnImprestLineCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestLineCardEditCompletedEventHandler(object sender, FnImprestLineCardEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnImprestLineCardEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnImprestLineCardEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ApprovalListCompletedEventHandler(object sender, ApprovalListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApprovalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApprovalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnClaimListCompletedEventHandler(object sender, FnClaimListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnClaimListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnClaimListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnClaimCardCompletedEventHandler(object sender, FnClaimCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnClaimCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnClaimCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnClaimCardEditCompletedEventHandler(object sender, FnClaimCardEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnClaimCardEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnClaimCardEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnClaimLineDeleteCompletedEventHandler(object sender, FnClaimLineDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnClaimLineDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnClaimLineDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnClaimLineCompletedEventHandler(object sender, FnClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnClaimLineCardCompletedEventHandler(object sender, FnClaimLineCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnClaimLineCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnClaimLineCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnClaimLineCardEditCompletedEventHandler(object sender, FnClaimLineCardEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnClaimLineCardEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnClaimLineCardEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDepartmentCompletedEventHandler(object sender, FnDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDepartmentValueCompletedEventHandler(object sender, FnDepartmentValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDepartmentValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDepartmentValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnRolecenterCompletedEventHandler(object sender, FnRolecenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRolecenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRolecenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnImprestListCompletedEventHandler(object sender, FnImprestListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnImprestListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnImprestListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLeaveCardEditCompletedEventHandler(object sender, FnLeaveCardEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLeaveCardEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLeaveCardEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnMissionProportsalsListCompletedEventHandler(object sender, FnMissionProportsalsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnMissionProportsalsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnMissionProportsalsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetProfilePictureCompletedEventHandler(object sender, FnGetProfilePictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProfilePictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProfilePictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pictureText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetStandardTextCompletedEventHandler(object sender, FnGetStandardTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetStandardTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetStandardTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetContryregionsCompletedEventHandler(object sender, FnGetContryregionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetContryregionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetContryregionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertMissionProporsalCompletedEventHandler(object sender, FnInsertMissionProporsalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertMissionProporsalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertMissionProporsalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdateMissionProporsalCompletedEventHandler(object sender, FnUpdateMissionProporsalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateMissionProporsalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateMissionProporsalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPurchaseRequisitionListCompletedEventHandler(object sender, FnPurchaseRequisitionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPurchaseRequisitionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPurchaseRequisitionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertPurchaseRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertimprestnewCompletedEventHandler(object sender, FninsertimprestnewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FninsertimprestnewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FninsertimprestnewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnimprestlineinsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertPurchasenewCompletedEventHandler(object sender, FninsertPurchasenewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FninsertPurchasenewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FninsertPurchasenewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPurchaselineinsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDimensionValuesListCompletedEventHandler(object sender, FnDimensionValuesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDimensionValuesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDimensionValuesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FncancelApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSurrenderListCompletedEventHandler(object sender, FnSurrenderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSurrenderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSurrenderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInstImrSrNewCompletedEventHandler(object sender, FnInstImrSrNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInstImrSrNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInstImrSrNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertbudgetinfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertteamrolesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertmisssionobjectivesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertmissionactivitiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnpurchaseLinesCompletedEventHandler(object sender, FnpurchaseLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnpurchaseLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnpurchaseLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertGeneralJournalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnJournalLinesCompletedEventHandler(object sender, FnJournalLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnJournalLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnJournalLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdatebudgetinfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdatePurchasenewCompletedEventHandler(object sender, FnUpdatePurchasenewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePurchasenewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePurchasenewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FngetLeaveBalanceTypeCompletedEventHandler(object sender, FngetLeaveBalanceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetLeaveBalanceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetLeaveBalanceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertTrainingRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnTrainingListCompletedEventHandler(object sender, FnTrainingListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnTrainingListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnTrainingListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdateTrainingRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnReqTrainingApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertAttachmentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUploadedDocumentsCompletedEventHandler(object sender, FnUploadedDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUploadedDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUploadedDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSurrenderLineUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnTrainingScheduleCompletedEventHandler(object sender, FnTrainingScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnTrainingScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnTrainingScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FininserttrainingscheduleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDeletePurchaseLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnimprestlinemodifyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertimprestModifyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnPurchaselineModifyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FninsertBudgetNotesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUdpateBudgetNotesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetcurrencyCodesCompletedEventHandler(object sender, FnGetcurrencyCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetcurrencyCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetcurrencyCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetAttachmentCompletedEventHandler(object sender, FnGetAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pictureText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDeleteAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591